!function(I){var g={};function n(c){if(g[c])return g[c].exports;var B=g[c]={i:c,l:!1,exports:{}};return I[c].call(B.exports,B,B.exports,n),B.l=!0,B.exports}n.m=I,n.c=g,n.d=function(I,g,c){n.o(I,g)||Object.defineProperty(I,g,{enumerable:!0,get:c})},n.r=function(I){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(I,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(I,"__esModule",{value:!0})},n.t=function(I,g){if(1&g&&(I=n(I)),8&g)return I;if(4&g&&"object"==typeof I&&I&&I.__esModule)return I;var c=Object.create(null);if(n.r(c),Object.defineProperty(c,"default",{enumerable:!0,value:I}),2&g&&"string"!=typeof I)for(var B in I)n.d(c,B,function(g){return I[g]}.bind(null,B));return c},n.n=function(I){var g=I&&I.__esModule?function(){return I.default}:function(){return I};return n.d(g,"a",g),g},n.o=function(I,g){return Object.prototype.hasOwnProperty.call(I,g)},n.p="",n(n.s=4)}({15:function(module,exports,__webpack_require__){eval('var __WEBPACK_AMD_DEFINE_RESULT__;// TinyColor v1.4.1\n// https://github.com/bgrins/TinyColor\n// Brian Grinstead, MIT License\n\n(function(Math) {\n\nvar trimLeft = /^\\s+/,\n    trimRight = /\\s+$/,\n    tinyCounter = 0,\n    mathRound = Math.round,\n    mathMin = Math.min,\n    mathMax = Math.max,\n    mathRandom = Math.random;\n\nfunction tinycolor (color, opts) {\n\n    color = (color) ? color : \'\';\n    opts = opts || { };\n\n    // If input is already a tinycolor, return itself\n    if (color instanceof tinycolor) {\n       return color;\n    }\n    // If we are called as a function, call using new instead\n    if (!(this instanceof tinycolor)) {\n        return new tinycolor(color, opts);\n    }\n\n    var rgb = inputToRGB(color);\n    this._originalInput = color,\n    this._r = rgb.r,\n    this._g = rgb.g,\n    this._b = rgb.b,\n    this._a = rgb.a,\n    this._roundA = mathRound(100*this._a) / 100,\n    this._format = opts.format || rgb.format;\n    this._gradientType = opts.gradientType;\n\n    // Don\'t let the range of [0,255] come back in [0,1].\n    // Potentially lose a little bit of precision here, but will fix issues where\n    // .5 gets interpreted as half of the total, instead of half of 1\n    // If it was supposed to be 128, this was already taken care of by `inputToRgb`\n    if (this._r < 1) { this._r = mathRound(this._r); }\n    if (this._g < 1) { this._g = mathRound(this._g); }\n    if (this._b < 1) { this._b = mathRound(this._b); }\n\n    this._ok = rgb.ok;\n    this._tc_id = tinyCounter++;\n}\n\ntinycolor.prototype = {\n    isDark: function() {\n        return this.getBrightness() < 128;\n    },\n    isLight: function() {\n        return !this.isDark();\n    },\n    isValid: function() {\n        return this._ok;\n    },\n    getOriginalInput: function() {\n      return this._originalInput;\n    },\n    getFormat: function() {\n        return this._format;\n    },\n    getAlpha: function() {\n        return this._a;\n    },\n    getBrightness: function() {\n        //http://www.w3.org/TR/AERT#color-contrast\n        var rgb = this.toRgb();\n        return (rgb.r * 299 + rgb.g * 587 + rgb.b * 114) / 1000;\n    },\n    getLuminance: function() {\n        //http://www.w3.org/TR/2008/REC-WCAG20-20081211/#relativeluminancedef\n        var rgb = this.toRgb();\n        var RsRGB, GsRGB, BsRGB, R, G, B;\n        RsRGB = rgb.r/255;\n        GsRGB = rgb.g/255;\n        BsRGB = rgb.b/255;\n\n        if (RsRGB <= 0.03928) {R = RsRGB / 12.92;} else {R = Math.pow(((RsRGB + 0.055) / 1.055), 2.4);}\n        if (GsRGB <= 0.03928) {G = GsRGB / 12.92;} else {G = Math.pow(((GsRGB + 0.055) / 1.055), 2.4);}\n        if (BsRGB <= 0.03928) {B = BsRGB / 12.92;} else {B = Math.pow(((BsRGB + 0.055) / 1.055), 2.4);}\n        return (0.2126 * R) + (0.7152 * G) + (0.0722 * B);\n    },\n    setAlpha: function(value) {\n        this._a = boundAlpha(value);\n        this._roundA = mathRound(100*this._a) / 100;\n        return this;\n    },\n    toHsv: function() {\n        var hsv = rgbToHsv(this._r, this._g, this._b);\n        return { h: hsv.h * 360, s: hsv.s, v: hsv.v, a: this._a };\n    },\n    toHsvString: function() {\n        var hsv = rgbToHsv(this._r, this._g, this._b);\n        var h = mathRound(hsv.h * 360), s = mathRound(hsv.s * 100), v = mathRound(hsv.v * 100);\n        return (this._a == 1) ?\n          "hsv("  + h + ", " + s + "%, " + v + "%)" :\n          "hsva(" + h + ", " + s + "%, " + v + "%, "+ this._roundA + ")";\n    },\n    toHsl: function() {\n        var hsl = rgbToHsl(this._r, this._g, this._b);\n        return { h: hsl.h * 360, s: hsl.s, l: hsl.l, a: this._a };\n    },\n    toHslString: function() {\n        var hsl = rgbToHsl(this._r, this._g, this._b);\n        var h = mathRound(hsl.h * 360), s = mathRound(hsl.s * 100), l = mathRound(hsl.l * 100);\n        return (this._a == 1) ?\n          "hsl("  + h + ", " + s + "%, " + l + "%)" :\n          "hsla(" + h + ", " + s + "%, " + l + "%, "+ this._roundA + ")";\n    },\n    toHex: function(allow3Char) {\n        return rgbToHex(this._r, this._g, this._b, allow3Char);\n    },\n    toHexString: function(allow3Char) {\n        return \'#\' + this.toHex(allow3Char);\n    },\n    toHex8: function(allow4Char) {\n        return rgbaToHex(this._r, this._g, this._b, this._a, allow4Char);\n    },\n    toHex8String: function(allow4Char) {\n        return \'#\' + this.toHex8(allow4Char);\n    },\n    toRgb: function() {\n        return { r: mathRound(this._r), g: mathRound(this._g), b: mathRound(this._b), a: this._a };\n    },\n    toRgbString: function() {\n        return (this._a == 1) ?\n          "rgb("  + mathRound(this._r) + ", " + mathRound(this._g) + ", " + mathRound(this._b) + ")" :\n          "rgba(" + mathRound(this._r) + ", " + mathRound(this._g) + ", " + mathRound(this._b) + ", " + this._roundA + ")";\n    },\n    toPercentageRgb: function() {\n        return { r: mathRound(bound01(this._r, 255) * 100) + "%", g: mathRound(bound01(this._g, 255) * 100) + "%", b: mathRound(bound01(this._b, 255) * 100) + "%", a: this._a };\n    },\n    toPercentageRgbString: function() {\n        return (this._a == 1) ?\n          "rgb("  + mathRound(bound01(this._r, 255) * 100) + "%, " + mathRound(bound01(this._g, 255) * 100) + "%, " + mathRound(bound01(this._b, 255) * 100) + "%)" :\n          "rgba(" + mathRound(bound01(this._r, 255) * 100) + "%, " + mathRound(bound01(this._g, 255) * 100) + "%, " + mathRound(bound01(this._b, 255) * 100) + "%, " + this._roundA + ")";\n    },\n    toName: function() {\n        if (this._a === 0) {\n            return "transparent";\n        }\n\n        if (this._a < 1) {\n            return false;\n        }\n\n        return hexNames[rgbToHex(this._r, this._g, this._b, true)] || false;\n    },\n    toFilter: function(secondColor) {\n        var hex8String = \'#\' + rgbaToArgbHex(this._r, this._g, this._b, this._a);\n        var secondHex8String = hex8String;\n        var gradientType = this._gradientType ? "GradientType = 1, " : "";\n\n        if (secondColor) {\n            var s = tinycolor(secondColor);\n            secondHex8String = \'#\' + rgbaToArgbHex(s._r, s._g, s._b, s._a);\n        }\n\n        return "progid:DXImageTransform.Microsoft.gradient("+gradientType+"startColorstr="+hex8String+",endColorstr="+secondHex8String+")";\n    },\n    toString: function(format) {\n        var formatSet = !!format;\n        format = format || this._format;\n\n        var formattedString = false;\n        var hasAlpha = this._a < 1 && this._a >= 0;\n        var needsAlphaFormat = !formatSet && hasAlpha && (format === "hex" || format === "hex6" || format === "hex3" || format === "hex4" || format === "hex8" || format === "name");\n\n        if (needsAlphaFormat) {\n            // Special case for "transparent", all other non-alpha formats\n            // will return rgba when there is transparency.\n            if (format === "name" && this._a === 0) {\n                return this.toName();\n            }\n            return this.toRgbString();\n        }\n        if (format === "rgb") {\n            formattedString = this.toRgbString();\n        }\n        if (format === "prgb") {\n            formattedString = this.toPercentageRgbString();\n        }\n        if (format === "hex" || format === "hex6") {\n            formattedString = this.toHexString();\n        }\n        if (format === "hex3") {\n            formattedString = this.toHexString(true);\n        }\n        if (format === "hex4") {\n            formattedString = this.toHex8String(true);\n        }\n        if (format === "hex8") {\n            formattedString = this.toHex8String();\n        }\n        if (format === "name") {\n            formattedString = this.toName();\n        }\n        if (format === "hsl") {\n            formattedString = this.toHslString();\n        }\n        if (format === "hsv") {\n            formattedString = this.toHsvString();\n        }\n\n        return formattedString || this.toHexString();\n    },\n    clone: function() {\n        return tinycolor(this.toString());\n    },\n\n    _applyModification: function(fn, args) {\n        var color = fn.apply(null, [this].concat([].slice.call(args)));\n        this._r = color._r;\n        this._g = color._g;\n        this._b = color._b;\n        this.setAlpha(color._a);\n        return this;\n    },\n    lighten: function() {\n        return this._applyModification(lighten, arguments);\n    },\n    brighten: function() {\n        return this._applyModification(brighten, arguments);\n    },\n    darken: function() {\n        return this._applyModification(darken, arguments);\n    },\n    desaturate: function() {\n        return this._applyModification(desaturate, arguments);\n    },\n    saturate: function() {\n        return this._applyModification(saturate, arguments);\n    },\n    greyscale: function() {\n        return this._applyModification(greyscale, arguments);\n    },\n    spin: function() {\n        return this._applyModification(spin, arguments);\n    },\n\n    _applyCombination: function(fn, args) {\n        return fn.apply(null, [this].concat([].slice.call(args)));\n    },\n    analogous: function() {\n        return this._applyCombination(analogous, arguments);\n    },\n    complement: function() {\n        return this._applyCombination(complement, arguments);\n    },\n    monochromatic: function() {\n        return this._applyCombination(monochromatic, arguments);\n    },\n    splitcomplement: function() {\n        return this._applyCombination(splitcomplement, arguments);\n    },\n    triad: function() {\n        return this._applyCombination(triad, arguments);\n    },\n    tetrad: function() {\n        return this._applyCombination(tetrad, arguments);\n    }\n};\n\n// If input is an object, force 1 into "1.0" to handle ratios properly\n// String input requires "1.0" as input, so 1 will be treated as 1\ntinycolor.fromRatio = function(color, opts) {\n    if (typeof color == "object") {\n        var newColor = {};\n        for (var i in color) {\n            if (color.hasOwnProperty(i)) {\n                if (i === "a") {\n                    newColor[i] = color[i];\n                }\n                else {\n                    newColor[i] = convertToPercentage(color[i]);\n                }\n            }\n        }\n        color = newColor;\n    }\n\n    return tinycolor(color, opts);\n};\n\n// Given a string or object, convert that input to RGB\n// Possible string inputs:\n//\n//     "red"\n//     "#f00" or "f00"\n//     "#ff0000" or "ff0000"\n//     "#ff000000" or "ff000000"\n//     "rgb 255 0 0" or "rgb (255, 0, 0)"\n//     "rgb 1.0 0 0" or "rgb (1, 0, 0)"\n//     "rgba (255, 0, 0, 1)" or "rgba 255, 0, 0, 1"\n//     "rgba (1.0, 0, 0, 1)" or "rgba 1.0, 0, 0, 1"\n//     "hsl(0, 100%, 50%)" or "hsl 0 100% 50%"\n//     "hsla(0, 100%, 50%, 1)" or "hsla 0 100% 50%, 1"\n//     "hsv(0, 100%, 100%)" or "hsv 0 100% 100%"\n//\nfunction inputToRGB(color) {\n\n    var rgb = { r: 0, g: 0, b: 0 };\n    var a = 1;\n    var s = null;\n    var v = null;\n    var l = null;\n    var ok = false;\n    var format = false;\n\n    if (typeof color == "string") {\n        color = stringInputToObject(color);\n    }\n\n    if (typeof color == "object") {\n        if (isValidCSSUnit(color.r) && isValidCSSUnit(color.g) && isValidCSSUnit(color.b)) {\n            rgb = rgbToRgb(color.r, color.g, color.b);\n            ok = true;\n            format = String(color.r).substr(-1) === "%" ? "prgb" : "rgb";\n        }\n        else if (isValidCSSUnit(color.h) && isValidCSSUnit(color.s) && isValidCSSUnit(color.v)) {\n            s = convertToPercentage(color.s);\n            v = convertToPercentage(color.v);\n            rgb = hsvToRgb(color.h, s, v);\n            ok = true;\n            format = "hsv";\n        }\n        else if (isValidCSSUnit(color.h) && isValidCSSUnit(color.s) && isValidCSSUnit(color.l)) {\n            s = convertToPercentage(color.s);\n            l = convertToPercentage(color.l);\n            rgb = hslToRgb(color.h, s, l);\n            ok = true;\n            format = "hsl";\n        }\n\n        if (color.hasOwnProperty("a")) {\n            a = color.a;\n        }\n    }\n\n    a = boundAlpha(a);\n\n    return {\n        ok: ok,\n        format: color.format || format,\n        r: mathMin(255, mathMax(rgb.r, 0)),\n        g: mathMin(255, mathMax(rgb.g, 0)),\n        b: mathMin(255, mathMax(rgb.b, 0)),\n        a: a\n    };\n}\n\n\n// Conversion Functions\n// --------------------\n\n// `rgbToHsl`, `rgbToHsv`, `hslToRgb`, `hsvToRgb` modified from:\n// <http://mjijackson.com/2008/02/rgb-to-hsl-and-rgb-to-hsv-color-model-conversion-algorithms-in-javascript>\n\n// `rgbToRgb`\n// Handle bounds / percentage checking to conform to CSS color spec\n// <http://www.w3.org/TR/css3-color/>\n// *Assumes:* r, g, b in [0, 255] or [0, 1]\n// *Returns:* { r, g, b } in [0, 255]\nfunction rgbToRgb(r, g, b){\n    return {\n        r: bound01(r, 255) * 255,\n        g: bound01(g, 255) * 255,\n        b: bound01(b, 255) * 255\n    };\n}\n\n// `rgbToHsl`\n// Converts an RGB color value to HSL.\n// *Assumes:* r, g, and b are contained in [0, 255] or [0, 1]\n// *Returns:* { h, s, l } in [0,1]\nfunction rgbToHsl(r, g, b) {\n\n    r = bound01(r, 255);\n    g = bound01(g, 255);\n    b = bound01(b, 255);\n\n    var max = mathMax(r, g, b), min = mathMin(r, g, b);\n    var h, s, l = (max + min) / 2;\n\n    if(max == min) {\n        h = s = 0; // achromatic\n    }\n    else {\n        var d = max - min;\n        s = l > 0.5 ? d / (2 - max - min) : d / (max + min);\n        switch(max) {\n            case r: h = (g - b) / d + (g < b ? 6 : 0); break;\n            case g: h = (b - r) / d + 2; break;\n            case b: h = (r - g) / d + 4; break;\n        }\n\n        h /= 6;\n    }\n\n    return { h: h, s: s, l: l };\n}\n\n// `hslToRgb`\n// Converts an HSL color value to RGB.\n// *Assumes:* h is contained in [0, 1] or [0, 360] and s and l are contained [0, 1] or [0, 100]\n// *Returns:* { r, g, b } in the set [0, 255]\nfunction hslToRgb(h, s, l) {\n    var r, g, b;\n\n    h = bound01(h, 360);\n    s = bound01(s, 100);\n    l = bound01(l, 100);\n\n    function hue2rgb(p, q, t) {\n        if(t < 0) t += 1;\n        if(t > 1) t -= 1;\n        if(t < 1/6) return p + (q - p) * 6 * t;\n        if(t < 1/2) return q;\n        if(t < 2/3) return p + (q - p) * (2/3 - t) * 6;\n        return p;\n    }\n\n    if(s === 0) {\n        r = g = b = l; // achromatic\n    }\n    else {\n        var q = l < 0.5 ? l * (1 + s) : l + s - l * s;\n        var p = 2 * l - q;\n        r = hue2rgb(p, q, h + 1/3);\n        g = hue2rgb(p, q, h);\n        b = hue2rgb(p, q, h - 1/3);\n    }\n\n    return { r: r * 255, g: g * 255, b: b * 255 };\n}\n\n// `rgbToHsv`\n// Converts an RGB color value to HSV\n// *Assumes:* r, g, and b are contained in the set [0, 255] or [0, 1]\n// *Returns:* { h, s, v } in [0,1]\nfunction rgbToHsv(r, g, b) {\n\n    r = bound01(r, 255);\n    g = bound01(g, 255);\n    b = bound01(b, 255);\n\n    var max = mathMax(r, g, b), min = mathMin(r, g, b);\n    var h, s, v = max;\n\n    var d = max - min;\n    s = max === 0 ? 0 : d / max;\n\n    if(max == min) {\n        h = 0; // achromatic\n    }\n    else {\n        switch(max) {\n            case r: h = (g - b) / d + (g < b ? 6 : 0); break;\n            case g: h = (b - r) / d + 2; break;\n            case b: h = (r - g) / d + 4; break;\n        }\n        h /= 6;\n    }\n    return { h: h, s: s, v: v };\n}\n\n// `hsvToRgb`\n// Converts an HSV color value to RGB.\n// *Assumes:* h is contained in [0, 1] or [0, 360] and s and v are contained in [0, 1] or [0, 100]\n// *Returns:* { r, g, b } in the set [0, 255]\n function hsvToRgb(h, s, v) {\n\n    h = bound01(h, 360) * 6;\n    s = bound01(s, 100);\n    v = bound01(v, 100);\n\n    var i = Math.floor(h),\n        f = h - i,\n        p = v * (1 - s),\n        q = v * (1 - f * s),\n        t = v * (1 - (1 - f) * s),\n        mod = i % 6,\n        r = [v, q, p, p, t, v][mod],\n        g = [t, v, v, q, p, p][mod],\n        b = [p, p, t, v, v, q][mod];\n\n    return { r: r * 255, g: g * 255, b: b * 255 };\n}\n\n// `rgbToHex`\n// Converts an RGB color to hex\n// Assumes r, g, and b are contained in the set [0, 255]\n// Returns a 3 or 6 character hex\nfunction rgbToHex(r, g, b, allow3Char) {\n\n    var hex = [\n        pad2(mathRound(r).toString(16)),\n        pad2(mathRound(g).toString(16)),\n        pad2(mathRound(b).toString(16))\n    ];\n\n    // Return a 3 character hex if possible\n    if (allow3Char && hex[0].charAt(0) == hex[0].charAt(1) && hex[1].charAt(0) == hex[1].charAt(1) && hex[2].charAt(0) == hex[2].charAt(1)) {\n        return hex[0].charAt(0) + hex[1].charAt(0) + hex[2].charAt(0);\n    }\n\n    return hex.join("");\n}\n\n// `rgbaToHex`\n// Converts an RGBA color plus alpha transparency to hex\n// Assumes r, g, b are contained in the set [0, 255] and\n// a in [0, 1]. Returns a 4 or 8 character rgba hex\nfunction rgbaToHex(r, g, b, a, allow4Char) {\n\n    var hex = [\n        pad2(mathRound(r).toString(16)),\n        pad2(mathRound(g).toString(16)),\n        pad2(mathRound(b).toString(16)),\n        pad2(convertDecimalToHex(a))\n    ];\n\n    // Return a 4 character hex if possible\n    if (allow4Char && hex[0].charAt(0) == hex[0].charAt(1) && hex[1].charAt(0) == hex[1].charAt(1) && hex[2].charAt(0) == hex[2].charAt(1) && hex[3].charAt(0) == hex[3].charAt(1)) {\n        return hex[0].charAt(0) + hex[1].charAt(0) + hex[2].charAt(0) + hex[3].charAt(0);\n    }\n\n    return hex.join("");\n}\n\n// `rgbaToArgbHex`\n// Converts an RGBA color to an ARGB Hex8 string\n// Rarely used, but required for "toFilter()"\nfunction rgbaToArgbHex(r, g, b, a) {\n\n    var hex = [\n        pad2(convertDecimalToHex(a)),\n        pad2(mathRound(r).toString(16)),\n        pad2(mathRound(g).toString(16)),\n        pad2(mathRound(b).toString(16))\n    ];\n\n    return hex.join("");\n}\n\n// `equals`\n// Can be called with any tinycolor input\ntinycolor.equals = function (color1, color2) {\n    if (!color1 || !color2) { return false; }\n    return tinycolor(color1).toRgbString() == tinycolor(color2).toRgbString();\n};\n\ntinycolor.random = function() {\n    return tinycolor.fromRatio({\n        r: mathRandom(),\n        g: mathRandom(),\n        b: mathRandom()\n    });\n};\n\n\n// Modification Functions\n// ----------------------\n// Thanks to less.js for some of the basics here\n// <https://github.com/cloudhead/less.js/blob/master/lib/less/functions.js>\n\nfunction desaturate(color, amount) {\n    amount = (amount === 0) ? 0 : (amount || 10);\n    var hsl = tinycolor(color).toHsl();\n    hsl.s -= amount / 100;\n    hsl.s = clamp01(hsl.s);\n    return tinycolor(hsl);\n}\n\nfunction saturate(color, amount) {\n    amount = (amount === 0) ? 0 : (amount || 10);\n    var hsl = tinycolor(color).toHsl();\n    hsl.s += amount / 100;\n    hsl.s = clamp01(hsl.s);\n    return tinycolor(hsl);\n}\n\nfunction greyscale(color) {\n    return tinycolor(color).desaturate(100);\n}\n\nfunction lighten (color, amount) {\n    amount = (amount === 0) ? 0 : (amount || 10);\n    var hsl = tinycolor(color).toHsl();\n    hsl.l += amount / 100;\n    hsl.l = clamp01(hsl.l);\n    return tinycolor(hsl);\n}\n\nfunction brighten(color, amount) {\n    amount = (amount === 0) ? 0 : (amount || 10);\n    var rgb = tinycolor(color).toRgb();\n    rgb.r = mathMax(0, mathMin(255, rgb.r - mathRound(255 * - (amount / 100))));\n    rgb.g = mathMax(0, mathMin(255, rgb.g - mathRound(255 * - (amount / 100))));\n    rgb.b = mathMax(0, mathMin(255, rgb.b - mathRound(255 * - (amount / 100))));\n    return tinycolor(rgb);\n}\n\nfunction darken (color, amount) {\n    amount = (amount === 0) ? 0 : (amount || 10);\n    var hsl = tinycolor(color).toHsl();\n    hsl.l -= amount / 100;\n    hsl.l = clamp01(hsl.l);\n    return tinycolor(hsl);\n}\n\n// Spin takes a positive or negative amount within [-360, 360] indicating the change of hue.\n// Values outside of this range will be wrapped into this range.\nfunction spin(color, amount) {\n    var hsl = tinycolor(color).toHsl();\n    var hue = (hsl.h + amount) % 360;\n    hsl.h = hue < 0 ? 360 + hue : hue;\n    return tinycolor(hsl);\n}\n\n// Combination Functions\n// ---------------------\n// Thanks to jQuery xColor for some of the ideas behind these\n// <https://github.com/infusion/jQuery-xcolor/blob/master/jquery.xcolor.js>\n\nfunction complement(color) {\n    var hsl = tinycolor(color).toHsl();\n    hsl.h = (hsl.h + 180) % 360;\n    return tinycolor(hsl);\n}\n\nfunction triad(color) {\n    var hsl = tinycolor(color).toHsl();\n    var h = hsl.h;\n    return [\n        tinycolor(color),\n        tinycolor({ h: (h + 120) % 360, s: hsl.s, l: hsl.l }),\n        tinycolor({ h: (h + 240) % 360, s: hsl.s, l: hsl.l })\n    ];\n}\n\nfunction tetrad(color) {\n    var hsl = tinycolor(color).toHsl();\n    var h = hsl.h;\n    return [\n        tinycolor(color),\n        tinycolor({ h: (h + 90) % 360, s: hsl.s, l: hsl.l }),\n        tinycolor({ h: (h + 180) % 360, s: hsl.s, l: hsl.l }),\n        tinycolor({ h: (h + 270) % 360, s: hsl.s, l: hsl.l })\n    ];\n}\n\nfunction splitcomplement(color) {\n    var hsl = tinycolor(color).toHsl();\n    var h = hsl.h;\n    return [\n        tinycolor(color),\n        tinycolor({ h: (h + 72) % 360, s: hsl.s, l: hsl.l}),\n        tinycolor({ h: (h + 216) % 360, s: hsl.s, l: hsl.l})\n    ];\n}\n\nfunction analogous(color, results, slices) {\n    results = results || 6;\n    slices = slices || 30;\n\n    var hsl = tinycolor(color).toHsl();\n    var part = 360 / slices;\n    var ret = [tinycolor(color)];\n\n    for (hsl.h = ((hsl.h - (part * results >> 1)) + 720) % 360; --results; ) {\n        hsl.h = (hsl.h + part) % 360;\n        ret.push(tinycolor(hsl));\n    }\n    return ret;\n}\n\nfunction monochromatic(color, results) {\n    results = results || 6;\n    var hsv = tinycolor(color).toHsv();\n    var h = hsv.h, s = hsv.s, v = hsv.v;\n    var ret = [];\n    var modification = 1 / results;\n\n    while (results--) {\n        ret.push(tinycolor({ h: h, s: s, v: v}));\n        v = (v + modification) % 1;\n    }\n\n    return ret;\n}\n\n// Utility Functions\n// ---------------------\n\ntinycolor.mix = function(color1, color2, amount) {\n    amount = (amount === 0) ? 0 : (amount || 50);\n\n    var rgb1 = tinycolor(color1).toRgb();\n    var rgb2 = tinycolor(color2).toRgb();\n\n    var p = amount / 100;\n\n    var rgba = {\n        r: ((rgb2.r - rgb1.r) * p) + rgb1.r,\n        g: ((rgb2.g - rgb1.g) * p) + rgb1.g,\n        b: ((rgb2.b - rgb1.b) * p) + rgb1.b,\n        a: ((rgb2.a - rgb1.a) * p) + rgb1.a\n    };\n\n    return tinycolor(rgba);\n};\n\n\n// Readability Functions\n// ---------------------\n// <http://www.w3.org/TR/2008/REC-WCAG20-20081211/#contrast-ratiodef (WCAG Version 2)\n\n// `contrast`\n// Analyze the 2 colors and returns the color contrast defined by (WCAG Version 2)\ntinycolor.readability = function(color1, color2) {\n    var c1 = tinycolor(color1);\n    var c2 = tinycolor(color2);\n    return (Math.max(c1.getLuminance(),c2.getLuminance())+0.05) / (Math.min(c1.getLuminance(),c2.getLuminance())+0.05);\n};\n\n// `isReadable`\n// Ensure that foreground and background color combinations meet WCAG2 guidelines.\n// The third argument is an optional Object.\n//      the \'level\' property states \'AA\' or \'AAA\' - if missing or invalid, it defaults to \'AA\';\n//      the \'size\' property states \'large\' or \'small\' - if missing or invalid, it defaults to \'small\'.\n// If the entire object is absent, isReadable defaults to {level:"AA",size:"small"}.\n\n// *Example*\n//    tinycolor.isReadable("#000", "#111") => false\n//    tinycolor.isReadable("#000", "#111",{level:"AA",size:"large"}) => false\ntinycolor.isReadable = function(color1, color2, wcag2) {\n    var readability = tinycolor.readability(color1, color2);\n    var wcag2Parms, out;\n\n    out = false;\n\n    wcag2Parms = validateWCAG2Parms(wcag2);\n    switch (wcag2Parms.level + wcag2Parms.size) {\n        case "AAsmall":\n        case "AAAlarge":\n            out = readability >= 4.5;\n            break;\n        case "AAlarge":\n            out = readability >= 3;\n            break;\n        case "AAAsmall":\n            out = readability >= 7;\n            break;\n    }\n    return out;\n\n};\n\n// `mostReadable`\n// Given a base color and a list of possible foreground or background\n// colors for that base, returns the most readable color.\n// Optionally returns Black or White if the most readable color is unreadable.\n// *Example*\n//    tinycolor.mostReadable(tinycolor.mostReadable("#123", ["#124", "#125"],{includeFallbackColors:false}).toHexString(); // "#112255"\n//    tinycolor.mostReadable(tinycolor.mostReadable("#123", ["#124", "#125"],{includeFallbackColors:true}).toHexString();  // "#ffffff"\n//    tinycolor.mostReadable("#a8015a", ["#faf3f3"],{includeFallbackColors:true,level:"AAA",size:"large"}).toHexString(); // "#faf3f3"\n//    tinycolor.mostReadable("#a8015a", ["#faf3f3"],{includeFallbackColors:true,level:"AAA",size:"small"}).toHexString(); // "#ffffff"\ntinycolor.mostReadable = function(baseColor, colorList, args) {\n    var bestColor = null;\n    var bestScore = 0;\n    var readability;\n    var includeFallbackColors, level, size ;\n    args = args || {};\n    includeFallbackColors = args.includeFallbackColors ;\n    level = args.level;\n    size = args.size;\n\n    for (var i= 0; i < colorList.length ; i++) {\n        readability = tinycolor.readability(baseColor, colorList[i]);\n        if (readability > bestScore) {\n            bestScore = readability;\n            bestColor = tinycolor(colorList[i]);\n        }\n    }\n\n    if (tinycolor.isReadable(baseColor, bestColor, {"level":level,"size":size}) || !includeFallbackColors) {\n        return bestColor;\n    }\n    else {\n        args.includeFallbackColors=false;\n        return tinycolor.mostReadable(baseColor,["#fff", "#000"],args);\n    }\n};\n\n\n// Big List of Colors\n// ------------------\n// <http://www.w3.org/TR/css3-color/#svg-color>\nvar names = tinycolor.names = {\n    aliceblue: "f0f8ff",\n    antiquewhite: "faebd7",\n    aqua: "0ff",\n    aquamarine: "7fffd4",\n    azure: "f0ffff",\n    beige: "f5f5dc",\n    bisque: "ffe4c4",\n    black: "000",\n    blanchedalmond: "ffebcd",\n    blue: "00f",\n    blueviolet: "8a2be2",\n    brown: "a52a2a",\n    burlywood: "deb887",\n    burntsienna: "ea7e5d",\n    cadetblue: "5f9ea0",\n    chartreuse: "7fff00",\n    chocolate: "d2691e",\n    coral: "ff7f50",\n    cornflowerblue: "6495ed",\n    cornsilk: "fff8dc",\n    crimson: "dc143c",\n    cyan: "0ff",\n    darkblue: "00008b",\n    darkcyan: "008b8b",\n    darkgoldenrod: "b8860b",\n    darkgray: "a9a9a9",\n    darkgreen: "006400",\n    darkgrey: "a9a9a9",\n    darkkhaki: "bdb76b",\n    darkmagenta: "8b008b",\n    darkolivegreen: "556b2f",\n    darkorange: "ff8c00",\n    darkorchid: "9932cc",\n    darkred: "8b0000",\n    darksalmon: "e9967a",\n    darkseagreen: "8fbc8f",\n    darkslateblue: "483d8b",\n    darkslategray: "2f4f4f",\n    darkslategrey: "2f4f4f",\n    darkturquoise: "00ced1",\n    darkviolet: "9400d3",\n    deeppink: "ff1493",\n    deepskyblue: "00bfff",\n    dimgray: "696969",\n    dimgrey: "696969",\n    dodgerblue: "1e90ff",\n    firebrick: "b22222",\n    floralwhite: "fffaf0",\n    forestgreen: "228b22",\n    fuchsia: "f0f",\n    gainsboro: "dcdcdc",\n    ghostwhite: "f8f8ff",\n    gold: "ffd700",\n    goldenrod: "daa520",\n    gray: "808080",\n    green: "008000",\n    greenyellow: "adff2f",\n    grey: "808080",\n    honeydew: "f0fff0",\n    hotpink: "ff69b4",\n    indianred: "cd5c5c",\n    indigo: "4b0082",\n    ivory: "fffff0",\n    khaki: "f0e68c",\n    lavender: "e6e6fa",\n    lavenderblush: "fff0f5",\n    lawngreen: "7cfc00",\n    lemonchiffon: "fffacd",\n    lightblue: "add8e6",\n    lightcoral: "f08080",\n    lightcyan: "e0ffff",\n    lightgoldenrodyellow: "fafad2",\n    lightgray: "d3d3d3",\n    lightgreen: "90ee90",\n    lightgrey: "d3d3d3",\n    lightpink: "ffb6c1",\n    lightsalmon: "ffa07a",\n    lightseagreen: "20b2aa",\n    lightskyblue: "87cefa",\n    lightslategray: "789",\n    lightslategrey: "789",\n    lightsteelblue: "b0c4de",\n    lightyellow: "ffffe0",\n    lime: "0f0",\n    limegreen: "32cd32",\n    linen: "faf0e6",\n    magenta: "f0f",\n    maroon: "800000",\n    mediumaquamarine: "66cdaa",\n    mediumblue: "0000cd",\n    mediumorchid: "ba55d3",\n    mediumpurple: "9370db",\n    mediumseagreen: "3cb371",\n    mediumslateblue: "7b68ee",\n    mediumspringgreen: "00fa9a",\n    mediumturquoise: "48d1cc",\n    mediumvioletred: "c71585",\n    midnightblue: "191970",\n    mintcream: "f5fffa",\n    mistyrose: "ffe4e1",\n    moccasin: "ffe4b5",\n    navajowhite: "ffdead",\n    navy: "000080",\n    oldlace: "fdf5e6",\n    olive: "808000",\n    olivedrab: "6b8e23",\n    orange: "ffa500",\n    orangered: "ff4500",\n    orchid: "da70d6",\n    palegoldenrod: "eee8aa",\n    palegreen: "98fb98",\n    paleturquoise: "afeeee",\n    palevioletred: "db7093",\n    papayawhip: "ffefd5",\n    peachpuff: "ffdab9",\n    peru: "cd853f",\n    pink: "ffc0cb",\n    plum: "dda0dd",\n    powderblue: "b0e0e6",\n    purple: "800080",\n    rebeccapurple: "663399",\n    red: "f00",\n    rosybrown: "bc8f8f",\n    royalblue: "4169e1",\n    saddlebrown: "8b4513",\n    salmon: "fa8072",\n    sandybrown: "f4a460",\n    seagreen: "2e8b57",\n    seashell: "fff5ee",\n    sienna: "a0522d",\n    silver: "c0c0c0",\n    skyblue: "87ceeb",\n    slateblue: "6a5acd",\n    slategray: "708090",\n    slategrey: "708090",\n    snow: "fffafa",\n    springgreen: "00ff7f",\n    steelblue: "4682b4",\n    tan: "d2b48c",\n    teal: "008080",\n    thistle: "d8bfd8",\n    tomato: "ff6347",\n    turquoise: "40e0d0",\n    violet: "ee82ee",\n    wheat: "f5deb3",\n    white: "fff",\n    whitesmoke: "f5f5f5",\n    yellow: "ff0",\n    yellowgreen: "9acd32"\n};\n\n// Make it easy to access colors via `hexNames[hex]`\nvar hexNames = tinycolor.hexNames = flip(names);\n\n\n// Utilities\n// ---------\n\n// `{ \'name1\': \'val1\' }` becomes `{ \'val1\': \'name1\' }`\nfunction flip(o) {\n    var flipped = { };\n    for (var i in o) {\n        if (o.hasOwnProperty(i)) {\n            flipped[o[i]] = i;\n        }\n    }\n    return flipped;\n}\n\n// Return a valid alpha value [0,1] with all invalid values being set to 1\nfunction boundAlpha(a) {\n    a = parseFloat(a);\n\n    if (isNaN(a) || a < 0 || a > 1) {\n        a = 1;\n    }\n\n    return a;\n}\n\n// Take input from [0, n] and return it as [0, 1]\nfunction bound01(n, max) {\n    if (isOnePointZero(n)) { n = "100%"; }\n\n    var processPercent = isPercentage(n);\n    n = mathMin(max, mathMax(0, parseFloat(n)));\n\n    // Automatically convert percentage into number\n    if (processPercent) {\n        n = parseInt(n * max, 10) / 100;\n    }\n\n    // Handle floating point rounding errors\n    if ((Math.abs(n - max) < 0.000001)) {\n        return 1;\n    }\n\n    // Convert into [0, 1] range if it isn\'t already\n    return (n % max) / parseFloat(max);\n}\n\n// Force a number between 0 and 1\nfunction clamp01(val) {\n    return mathMin(1, mathMax(0, val));\n}\n\n// Parse a base-16 hex value into a base-10 integer\nfunction parseIntFromHex(val) {\n    return parseInt(val, 16);\n}\n\n// Need to handle 1.0 as 100%, since once it is a number, there is no difference between it and 1\n// <http://stackoverflow.com/questions/7422072/javascript-how-to-detect-number-as-a-decimal-including-1-0>\nfunction isOnePointZero(n) {\n    return typeof n == "string" && n.indexOf(\'.\') != -1 && parseFloat(n) === 1;\n}\n\n// Check to see if string passed in is a percentage\nfunction isPercentage(n) {\n    return typeof n === "string" && n.indexOf(\'%\') != -1;\n}\n\n// Force a hex value to have 2 characters\nfunction pad2(c) {\n    return c.length == 1 ? \'0\' + c : \'\' + c;\n}\n\n// Replace a decimal with it\'s percentage value\nfunction convertToPercentage(n) {\n    if (n <= 1) {\n        n = (n * 100) + "%";\n    }\n\n    return n;\n}\n\n// Converts a decimal to a hex value\nfunction convertDecimalToHex(d) {\n    return Math.round(parseFloat(d) * 255).toString(16);\n}\n// Converts a hex value to a decimal\nfunction convertHexToDecimal(h) {\n    return (parseIntFromHex(h) / 255);\n}\n\nvar matchers = (function() {\n\n    // <http://www.w3.org/TR/css3-values/#integers>\n    var CSS_INTEGER = "[-\\\\+]?\\\\d+%?";\n\n    // <http://www.w3.org/TR/css3-values/#number-value>\n    var CSS_NUMBER = "[-\\\\+]?\\\\d*\\\\.\\\\d+%?";\n\n    // Allow positive/negative integer/number.  Don\'t capture the either/or, just the entire outcome.\n    var CSS_UNIT = "(?:" + CSS_NUMBER + ")|(?:" + CSS_INTEGER + ")";\n\n    // Actual matching.\n    // Parentheses and commas are optional, but not required.\n    // Whitespace can take the place of commas or opening paren\n    var PERMISSIVE_MATCH3 = "[\\\\s|\\\\(]+(" + CSS_UNIT + ")[,|\\\\s]+(" + CSS_UNIT + ")[,|\\\\s]+(" + CSS_UNIT + ")\\\\s*\\\\)?";\n    var PERMISSIVE_MATCH4 = "[\\\\s|\\\\(]+(" + CSS_UNIT + ")[,|\\\\s]+(" + CSS_UNIT + ")[,|\\\\s]+(" + CSS_UNIT + ")[,|\\\\s]+(" + CSS_UNIT + ")\\\\s*\\\\)?";\n\n    return {\n        CSS_UNIT: new RegExp(CSS_UNIT),\n        rgb: new RegExp("rgb" + PERMISSIVE_MATCH3),\n        rgba: new RegExp("rgba" + PERMISSIVE_MATCH4),\n        hsl: new RegExp("hsl" + PERMISSIVE_MATCH3),\n        hsla: new RegExp("hsla" + PERMISSIVE_MATCH4),\n        hsv: new RegExp("hsv" + PERMISSIVE_MATCH3),\n        hsva: new RegExp("hsva" + PERMISSIVE_MATCH4),\n        hex3: /^#?([0-9a-fA-F]{1})([0-9a-fA-F]{1})([0-9a-fA-F]{1})$/,\n        hex6: /^#?([0-9a-fA-F]{2})([0-9a-fA-F]{2})([0-9a-fA-F]{2})$/,\n        hex4: /^#?([0-9a-fA-F]{1})([0-9a-fA-F]{1})([0-9a-fA-F]{1})([0-9a-fA-F]{1})$/,\n        hex8: /^#?([0-9a-fA-F]{2})([0-9a-fA-F]{2})([0-9a-fA-F]{2})([0-9a-fA-F]{2})$/\n    };\n})();\n\n// `isValidCSSUnit`\n// Take in a single string / number and check to see if it looks like a CSS unit\n// (see `matchers` above for definition).\nfunction isValidCSSUnit(color) {\n    return !!matchers.CSS_UNIT.exec(color);\n}\n\n// `stringInputToObject`\n// Permissive string parsing.  Take in a number of formats, and output an object\n// based on detected format.  Returns `{ r, g, b }` or `{ h, s, l }` or `{ h, s, v}`\nfunction stringInputToObject(color) {\n\n    color = color.replace(trimLeft,\'\').replace(trimRight, \'\').toLowerCase();\n    var named = false;\n    if (names[color]) {\n        color = names[color];\n        named = true;\n    }\n    else if (color == \'transparent\') {\n        return { r: 0, g: 0, b: 0, a: 0, format: "name" };\n    }\n\n    // Try to match string input using regular expressions.\n    // Keep most of the number bounding out of this function - don\'t worry about [0,1] or [0,100] or [0,360]\n    // Just return an object and let the conversion functions handle that.\n    // This way the result will be the same whether the tinycolor is initialized with string or object.\n    var match;\n    if ((match = matchers.rgb.exec(color))) {\n        return { r: match[1], g: match[2], b: match[3] };\n    }\n    if ((match = matchers.rgba.exec(color))) {\n        return { r: match[1], g: match[2], b: match[3], a: match[4] };\n    }\n    if ((match = matchers.hsl.exec(color))) {\n        return { h: match[1], s: match[2], l: match[3] };\n    }\n    if ((match = matchers.hsla.exec(color))) {\n        return { h: match[1], s: match[2], l: match[3], a: match[4] };\n    }\n    if ((match = matchers.hsv.exec(color))) {\n        return { h: match[1], s: match[2], v: match[3] };\n    }\n    if ((match = matchers.hsva.exec(color))) {\n        return { h: match[1], s: match[2], v: match[3], a: match[4] };\n    }\n    if ((match = matchers.hex8.exec(color))) {\n        return {\n            r: parseIntFromHex(match[1]),\n            g: parseIntFromHex(match[2]),\n            b: parseIntFromHex(match[3]),\n            a: convertHexToDecimal(match[4]),\n            format: named ? "name" : "hex8"\n        };\n    }\n    if ((match = matchers.hex6.exec(color))) {\n        return {\n            r: parseIntFromHex(match[1]),\n            g: parseIntFromHex(match[2]),\n            b: parseIntFromHex(match[3]),\n            format: named ? "name" : "hex"\n        };\n    }\n    if ((match = matchers.hex4.exec(color))) {\n        return {\n            r: parseIntFromHex(match[1] + \'\' + match[1]),\n            g: parseIntFromHex(match[2] + \'\' + match[2]),\n            b: parseIntFromHex(match[3] + \'\' + match[3]),\n            a: convertHexToDecimal(match[4] + \'\' + match[4]),\n            format: named ? "name" : "hex8"\n        };\n    }\n    if ((match = matchers.hex3.exec(color))) {\n        return {\n            r: parseIntFromHex(match[1] + \'\' + match[1]),\n            g: parseIntFromHex(match[2] + \'\' + match[2]),\n            b: parseIntFromHex(match[3] + \'\' + match[3]),\n            format: named ? "name" : "hex"\n        };\n    }\n\n    return false;\n}\n\nfunction validateWCAG2Parms(parms) {\n    // return valid WCAG2 parms for isReadable.\n    // If input parms are invalid, return {"level":"AA", "size":"small"}\n    var level, size;\n    parms = parms || {"level":"AA", "size":"small"};\n    level = (parms.level || "AA").toUpperCase();\n    size = (parms.size || "small").toLowerCase();\n    if (level !== "AA" && level !== "AAA") {\n        level = "AA";\n    }\n    if (size !== "small" && size !== "large") {\n        size = "small";\n    }\n    return {"level":level, "size":size};\n}\n\n// Node: Export function\nif ( true && module.exports) {\n    module.exports = tinycolor;\n}\n// AMD/requirejs: Define the module\nelse if (true) {\n    !(__WEBPACK_AMD_DEFINE_RESULT__ = (function () {return tinycolor;}).call(exports, __webpack_require__, exports, module),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n}\n// Browser: Expose to window\nelse {}\n\n})(Math);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///15\n')},23:function(module,exports,__webpack_require__){"use strict";eval("/**\n* Copyright © 2018 Splunk Inc.\n* SPLUNK CONFIDENTIAL – Use or disclosure of this material in whole or in part\n* without a valid written license from Splunk Inc. is PROHIBITED.\n**/\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _base = __webpack_require__(9);\n\nvar _base2 = _interopRequireDefault(_base);\n\nvar _mixins = __webpack_require__(5);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * # Brand Colors\n *\n *  @colorSet\n */\nvar brandColors = {\n    brandColorL50: '#fef8f2',\n    brandColorL40: '#fde6d2',\n    brandColorL30: '#fbcda5',\n    brandColorL20: '#f9b479',\n    brandColorL10: '#f79b4c',\n    brandColor: '#f58220',\n    brandColorD10: '#ed740b',\n    brandColorD20: '#d2670a',\n    brandColorD30: '#b85b09',\n    brandColorD40: '#9e4e07',\n    brandColorD50: '#844106'\n};\n\nvar variables = _extends({}, _base2.default, brandColors);\n\nexports.default = _extends({}, variables, {\n    mixins: {\n        reset: (0, _mixins.createReset)(variables),\n        clearfix: _mixins.clearfix,\n        ellipsis: _mixins.ellipsis,\n        printWidth100Percent: _mixins.printWidth100Percent,\n        printHide: _mixins.printHide,\n        printNoBackground: _mixins.printNoBackground,\n        printWrapAll: _mixins.printWrapAll\n    }\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vL1VzZXJzL2tjaGFtcGxpbi9wcm9ncmFtbWluZy9TUExVTktfVUkvQ29kZS9NeVRvRG9MaXN0L25vZGVfbW9kdWxlcy9Ac3BsdW5rL3RoZW1lcy9saXRlLmpzPzM5YTciXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFnQjs7QUFFaEI7QUFDQTtBQUNBLENBQUM7O0FBRUQsbURBQW1ELGdCQUFnQixzQkFBc0IsT0FBTywyQkFBMkIsMEJBQTBCLHlEQUF5RCwyQkFBMkIsRUFBRSxFQUFFLEVBQUUsZUFBZTs7QUFFOVAsWUFBWSxtQkFBTyxDQUFDLENBQVE7O0FBRTVCOztBQUVBLGNBQWMsbUJBQU8sQ0FBQyxDQUFVOztBQUVoQyxzQ0FBc0MsdUNBQXVDLGdCQUFnQjs7QUFFN0Y7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBLDJCQUEyQjs7QUFFM0IsNkJBQTZCO0FBQzdCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUMiLCJmaWxlIjoiMjMuanMiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiogQ29weXJpZ2h0IMKpIDIwMTggU3BsdW5rIEluYy5cbiogU1BMVU5LIENPTkZJREVOVElBTCDigJMgVXNlIG9yIGRpc2Nsb3N1cmUgb2YgdGhpcyBtYXRlcmlhbCBpbiB3aG9sZSBvciBpbiBwYXJ0XG4qIHdpdGhvdXQgYSB2YWxpZCB3cml0dGVuIGxpY2Vuc2UgZnJvbSBTcGx1bmsgSW5jLiBpcyBQUk9ISUJJVEVELlxuKiovJ3VzZSBzdHJpY3QnO1xuXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHtcbiAgICB2YWx1ZTogdHJ1ZVxufSk7XG5cbnZhciBfZXh0ZW5kcyA9IE9iamVjdC5hc3NpZ24gfHwgZnVuY3Rpb24gKHRhcmdldCkgeyBmb3IgKHZhciBpID0gMTsgaSA8IGFyZ3VtZW50cy5sZW5ndGg7IGkrKykgeyB2YXIgc291cmNlID0gYXJndW1lbnRzW2ldOyBmb3IgKHZhciBrZXkgaW4gc291cmNlKSB7IGlmIChPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwoc291cmNlLCBrZXkpKSB7IHRhcmdldFtrZXldID0gc291cmNlW2tleV07IH0gfSB9IHJldHVybiB0YXJnZXQ7IH07XG5cbnZhciBfYmFzZSA9IHJlcXVpcmUoJy4vYmFzZScpO1xuXG52YXIgX2Jhc2UyID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChfYmFzZSk7XG5cbnZhciBfbWl4aW5zID0gcmVxdWlyZSgnLi9taXhpbnMnKTtcblxuZnVuY3Rpb24gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChvYmopIHsgcmV0dXJuIG9iaiAmJiBvYmouX19lc01vZHVsZSA/IG9iaiA6IHsgZGVmYXVsdDogb2JqIH07IH1cblxuLyoqXG4gKiAjIEJyYW5kIENvbG9yc1xuICpcbiAqICBAY29sb3JTZXRcbiAqL1xudmFyIGJyYW5kQ29sb3JzID0ge1xuICAgIGJyYW5kQ29sb3JMNTA6ICcjZmVmOGYyJyxcbiAgICBicmFuZENvbG9yTDQwOiAnI2ZkZTZkMicsXG4gICAgYnJhbmRDb2xvckwzMDogJyNmYmNkYTUnLFxuICAgIGJyYW5kQ29sb3JMMjA6ICcjZjliNDc5JyxcbiAgICBicmFuZENvbG9yTDEwOiAnI2Y3OWI0YycsXG4gICAgYnJhbmRDb2xvcjogJyNmNTgyMjAnLFxuICAgIGJyYW5kQ29sb3JEMTA6ICcjZWQ3NDBiJyxcbiAgICBicmFuZENvbG9yRDIwOiAnI2QyNjcwYScsXG4gICAgYnJhbmRDb2xvckQzMDogJyNiODViMDknLFxuICAgIGJyYW5kQ29sb3JENDA6ICcjOWU0ZTA3JyxcbiAgICBicmFuZENvbG9yRDUwOiAnIzg0NDEwNidcbn07XG5cbnZhciB2YXJpYWJsZXMgPSBfZXh0ZW5kcyh7fSwgX2Jhc2UyLmRlZmF1bHQsIGJyYW5kQ29sb3JzKTtcblxuZXhwb3J0cy5kZWZhdWx0ID0gX2V4dGVuZHMoe30sIHZhcmlhYmxlcywge1xuICAgIG1peGluczoge1xuICAgICAgICByZXNldDogKDAsIF9taXhpbnMuY3JlYXRlUmVzZXQpKHZhcmlhYmxlcyksXG4gICAgICAgIGNsZWFyZml4OiBfbWl4aW5zLmNsZWFyZml4LFxuICAgICAgICBlbGxpcHNpczogX21peGlucy5lbGxpcHNpcyxcbiAgICAgICAgcHJpbnRXaWR0aDEwMFBlcmNlbnQ6IF9taXhpbnMucHJpbnRXaWR0aDEwMFBlcmNlbnQsXG4gICAgICAgIHByaW50SGlkZTogX21peGlucy5wcmludEhpZGUsXG4gICAgICAgIHByaW50Tm9CYWNrZ3JvdW5kOiBfbWl4aW5zLnByaW50Tm9CYWNrZ3JvdW5kLFxuICAgICAgICBwcmludFdyYXBBbGw6IF9taXhpbnMucHJpbnRXcmFwQWxsXG4gICAgfVxufSk7Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///23\n")},4:function(module,__webpack_exports__,__webpack_require__){"use strict";eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "variable", function() { return variable; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "mixin", function() { return mixin; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "enterprise", function() { return enterprise; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "lite", function() { return lite; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "themes", function() { return themes; });\n/* harmony import */ var _splunk_themes_enterprise__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(7);\n/* harmony import */ var _splunk_themes_enterprise__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_splunk_themes_enterprise__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _splunk_themes_lite__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(23);\n/* harmony import */ var _splunk_themes_lite__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_splunk_themes_lite__WEBPACK_IMPORTED_MODULE_1__);\n\n\n\nvar getTheme = function getTheme(props) {\n  return props.theme && props.theme[\'mainpage\'] ? props.theme[\'mainpage\'] : _splunk_themes_enterprise__WEBPACK_IMPORTED_MODULE_0___default.a;\n}; // prettier-ignore\n\n\nvar variable = function variable(name) {\n  return function (props) {\n    return getTheme(props)[name];\n  };\n};\nvar mixin = function mixin(name) {\n  return function () {\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return function (props) {\n      var _getTheme$mixins;\n\n      return (_getTheme$mixins = getTheme(props).mixins)[name].apply(_getTheme$mixins, args);\n    };\n  };\n};\nvar enterprise = {\n  \'mainpage\': _splunk_themes_enterprise__WEBPACK_IMPORTED_MODULE_0___default.a\n}; // prettier-ignore\n\nvar lite = {\n  \'mainpage\': _splunk_themes_lite__WEBPACK_IMPORTED_MODULE_1___default.a\n}; // prettier-ignore\n\nvar themes = {\n  enterprise: enterprise,\n  lite: lite\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvcGFnZXMvdGhlbWVzLmpzPzg0Y2IiXSwibmFtZXMiOlsiZ2V0VGhlbWUiLCJwcm9wcyIsInRoZW1lIiwiYmFzZUVudGVycHJpc2UiLCJ2YXJpYWJsZSIsIm5hbWUiLCJtaXhpbiIsImFyZ3MiLCJtaXhpbnMiLCJlbnRlcnByaXNlIiwibGl0ZSIsImJhc2VMaXRlIiwidGhlbWVzIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQ0E7O0FBRUEsSUFBTUEsUUFBUSxHQUFHLFNBQVhBLFFBQVcsQ0FBQUMsS0FBSztBQUFBLFNBQ2xCQSxLQUFLLENBQUNDLEtBQU4sSUFBZUQsS0FBSyxDQUFDQyxLQUFOLENBQVksVUFBWixDQUFmLEdBQXlDRCxLQUFLLENBQUNDLEtBQU4sQ0FBWSxVQUFaLENBQXpDLEdBQW1FQyxnRUFEakQ7QUFBQSxDQUF0QixDLENBQ3VGOzs7QUFDaEYsSUFBTUMsUUFBUSxHQUFHLFNBQVhBLFFBQVcsQ0FBQUMsSUFBSTtBQUFBLFNBQUksVUFBQUosS0FBSztBQUFBLFdBQUlELFFBQVEsQ0FBQ0MsS0FBRCxDQUFSLENBQWdCSSxJQUFoQixDQUFKO0FBQUEsR0FBVDtBQUFBLENBQXJCO0FBQ0EsSUFBTUMsS0FBSyxHQUFHLFNBQVJBLEtBQVEsQ0FBQUQsSUFBSTtBQUFBLFNBQUk7QUFBQSxzQ0FBSUUsSUFBSjtBQUFJQSxVQUFKO0FBQUE7O0FBQUEsV0FBYSxVQUFBTixLQUFLO0FBQUE7O0FBQUEsYUFBSSxvQkFBQUQsUUFBUSxDQUFDQyxLQUFELENBQVIsQ0FBZ0JPLE1BQWhCLEVBQXVCSCxJQUF2QiwwQkFBZ0NFLElBQWhDLENBQUo7QUFBQSxLQUFsQjtBQUFBLEdBQUo7QUFBQSxDQUFsQjtBQUVBLElBQU1FLFVBQVUsR0FBRztBQUFFLGNBQVlOLGdFQUFjQTtBQUE1QixDQUFuQixDLENBQW1EOztBQUNuRCxJQUFNTyxJQUFJLEdBQUc7QUFBRSxjQUFZQywwREFBUUE7QUFBdEIsQ0FBYixDLENBQXVDOztBQUN2QyxJQUFNQyxNQUFNLEdBQUc7QUFBRUgsWUFBVSxFQUFWQSxVQUFGO0FBQWNDLE1BQUksRUFBSkE7QUFBZCxDQUFmIiwiZmlsZSI6IjQuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgYmFzZUVudGVycHJpc2UgZnJvbSAnQHNwbHVuay90aGVtZXMvZW50ZXJwcmlzZSc7XG5pbXBvcnQgYmFzZUxpdGUgZnJvbSAnQHNwbHVuay90aGVtZXMvbGl0ZSc7XG5cbmNvbnN0IGdldFRoZW1lID0gcHJvcHMgPT5cbiAgICBwcm9wcy50aGVtZSAmJiBwcm9wcy50aGVtZVsnbWFpbnBhZ2UnXSA/IHByb3BzLnRoZW1lWydtYWlucGFnZSddIDogYmFzZUVudGVycHJpc2U7IC8vIHByZXR0aWVyLWlnbm9yZVxuZXhwb3J0IGNvbnN0IHZhcmlhYmxlID0gbmFtZSA9PiBwcm9wcyA9PiBnZXRUaGVtZShwcm9wcylbbmFtZV07XG5leHBvcnQgY29uc3QgbWl4aW4gPSBuYW1lID0+ICguLi5hcmdzKSA9PiBwcm9wcyA9PiBnZXRUaGVtZShwcm9wcykubWl4aW5zW25hbWVdKC4uLmFyZ3MpO1xuXG5leHBvcnQgY29uc3QgZW50ZXJwcmlzZSA9IHsgJ21haW5wYWdlJzogYmFzZUVudGVycHJpc2UgfTsgLy8gcHJldHRpZXItaWdub3JlXG5leHBvcnQgY29uc3QgbGl0ZSA9IHsgJ21haW5wYWdlJzogYmFzZUxpdGUgfTsgLy8gcHJldHRpZXItaWdub3JlXG5leHBvcnQgY29uc3QgdGhlbWVzID0geyBlbnRlcnByaXNlLCBsaXRlIH07XG4iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///4\n')},5:function(module,exports,__webpack_require__){"use strict";eval("/**\n* Copyright © 2018 Splunk Inc.\n* SPLUNK CONFIDENTIAL – Use or disclosure of this material in whole or in part\n* without a valid written license from Splunk Inc. is PROHIBITED.\n**/\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nexports.createReset = createReset;\nexports.clearfix = clearfix;\nexports.ellipsis = ellipsis;\nexports.printWidth100Percent = printWidth100Percent;\nexports.printHide = printHide;\nexports.printNoBackground = printNoBackground;\nexports.printWrapAll = printWrapAll;\n\n/**\n * @file\n * A collection of style-related helper functions. All of them return a single object containing\n * DOM CSS properties, for example: `{ display: …, fontFamily: … }`.\n *\n * `@splunk/css-loader` automatically makes these mixins available for use but converts their name\n * to kebab-case (to achive backwards compatability). For example: `printHide` can be used as `print-hide`.\n */\n\n// Markdown examples in this file have to prepend a zero width joiner character before each @\n// to prevent jsdoc from interpreting something like @mixin as a tag, see:\n// https://github.com/jsdoc3/jsdoc/issues/821\n\nfunction createReset(variables) {\n    var fullReset = {\n        animation: 'none 0s ease 0s 1 normal none running',\n        backfaceVisibility: 'visible',\n        background: 'transparent none repeat 0 0 / auto auto padding-box border-box scroll',\n        border: 'medium none currentColor',\n        borderCollapse: 'separate',\n        borderImage: 'none',\n        borderRadius: 0,\n        borderSpacing: 0,\n        bottom: 'auto',\n        boxShadow: 'none',\n        captionSide: 'top',\n        clear: 'none',\n        clip: 'auto',\n        columns: 'auto',\n        columnCount: 'auto',\n        columnFill: 'balance',\n        columnGap: 'normal',\n        columnRule: 'medium none currentColor',\n        columnSpan: 1,\n        columnWidth: 'auto',\n        content: 'normal',\n        counterIncrement: 'none',\n        counterReset: 'none',\n        cursor: 'auto',\n        emptyCells: 'show',\n        float: 'none',\n        fontStyle: 'normal',\n        fontVariant: 'normal',\n        fontWeight: 'normal',\n        fontStretch: 'normal',\n        height: 'auto',\n        hyphens: 'none',\n        left: 'auto',\n        letterSpacing: 'normal',\n        listStyle: 'disc outside none',\n        margin: 0,\n        maxHeight: 'none',\n        maxWidth: 'none',\n        minHeight: 0,\n        minWidth: 0,\n        opacity: 1,\n        orphans: 2,\n        overflow: 'visible',\n        overflowX: 'visible',\n        overflowY: 'visible',\n        padding: 0,\n        pageBreakAfter: 'auto',\n        pageBreakBefore: 'auto',\n        pageBreakInside: 'auto',\n        perspective: 'none',\n        perspectiveOrigin: '50% 50%',\n        pointerEvents: 'auto',\n        position: 'static',\n        right: 'auto',\n        tabSize: 8,\n        tableLayout: 'auto',\n        textAlign: 'left',\n        textAlignLast: 'auto',\n        textDecoration: 'none',\n        textIndent: 0,\n        textShadow: 'none',\n        textTransform: 'none',\n        top: 'auto',\n        transform: 'none',\n        transformOrigin: '50% 50% 0',\n        transformStyle: 'flat',\n        transition: 'none 0s ease 0s',\n        userSelect: 'auto',\n        verticalAlign: 'baseline',\n        whiteSpace: 'normal',\n        widows: 2,\n        width: 'auto',\n        wordSpacing: 'normal',\n        zIndex: 'auto'\n    };\n\n    /**\n     * The `reset` mixin resets all css properties to their browser defaults, plus many to\n     * theme-specific values. This ensures an element is not inheriting any inappropriate styles.\n     *\n     * Note that the output includes `all` set to `initial`.\n     *\n     *  ##### Example (@splunk/css-loader)\n     *  ```css\n     *  .myButton {\n     *      ‍@mixin reset inline-block;\n     *  }\n     *  ```\n     *\n     *  ##### Example (styled-components)\n     *  ```css\n     *  .myButton {\n     *      ‍${props => props.theme.mixins.reset('inline-block')};\n     *  }\n     *  ```\n     * @name reset\n     * @kind function\n     * @param {string} [display=inline] Set the `display` property (block, inline-block, …)\n     * @param {bool} [full=true] Reset all properies (for browsers that don't support `all`: `initial`)\n     * @public\n     */\n    return function () {\n        var display = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'inline';\n        var full = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n        return _extends({}, full ? fullReset : {}, {\n            all: 'initial',\n            fontFamily: variables.fontFamily,\n            fontSize: variables.fontSize,\n            lineHeight: variables.lineHeight,\n            color: variables.textColor,\n            boxSizing: 'border-box',\n            display: display,\n            borderWidth: '1px',\n            visibility: 'inherit',\n            outline: 'medium none ' + variables.focusColor\n        });\n    };\n}\n\n/**\n * `clearfix` is used on a container to ensure it's height is at least as tall as any floating\n * children.\n *\n *  ##### Example (@splunk/css-loader)\n *  ``` css\n *  .container {\n *      ‍@mixin clearfix;\n *  }\n *  ```\n *\n *  ##### Example (styled-components)\n *  ``` css\n *  .myButton {\n *      ‍${props => props.theme.mixins.clearfix()};\n *   }\n *  ```\n * @public\n */\nfunction clearfix() {\n    return {\n        '&::after': {\n            display: 'table',\n            content: '\"\"',\n            clear: 'both'\n        }\n    };\n}\n\n/**\n * Use `ellipsis` for overflowing text. Requires `display` to be set to `inline-block` or `block`.\n *\n *  ##### Example (@splunk/css-loader)\n *  ``` css\n *  .myButton {\n *      ‍@mixin ellipsis;\n *      display: inline-block;\n *  }\n *  ```\n *\n *  ##### Example (styled-components)\n *  ``` css\n *  .myButton {\n *      ‍${props => props.theme.mixins.ellipsis()};\n *      display: inline-block;\n *   }\n *  ```\n * @public\n */\nfunction ellipsis() {\n    return {\n        overflow: 'hidden',\n        textOverflow: 'ellipsis',\n        whiteSpace: 'nowrap'\n    };\n}\n\n/**\n * Force an element to be exactly 100% wide so that it doesn't overflow the page.\n *\n *  ##### Example (@splunk/css-loader)\n *  ```css\n *  ‍@media print {\n *      .container {\n *          ‍@mixin print-width-100-percent;\n *      }\n *  }\n *  ```\n *\n *  ##### Example (styled-components)\n *  ```css\n *  ‍@media print {\n *      ‍${props => props.theme.mixins.printWidth100Percent()};\n *  }\n *  ```\n *  @public\n */\nfunction printWidth100Percent() {\n    return {\n        maxWidth: '100% !important',\n        width: '100% !important',\n        overflow: 'hidden !important'\n    };\n}\n\n/**\n * Hide an element (such as a button).\n *\n *  ##### Example (@splunk/css-loader)\n *  ```css\n *  ‍@media print {\n *      .interactiveElement {\n *          ‍@mixin print-hide;\n *      }\n *  }\n *  ```\n *\n *  ##### Example (styled-components)\n *  ```css\n *  ‍@media print {\n *      ‍${props => props.theme.mixins.printHide()};\n *  }\n *  ```\n * @public\n */\nfunction printHide() {\n    return {\n        display: 'none !important'\n    };\n}\n\n/**\n * Remove background gradients and images.\n *\n *  ##### Example (@splunk/css-loader)\n *  ```css\n *  ‍@media print {\n *      .interactiveElement {\n *          ‍@mixin print-no-background;\n *      }\n *  }\n *  ```\n *\n *  ##### Example (styled-components)\n *  ```css\n *  ‍@media print {\n *      ‍${props => props.theme.mixins.printNoBackground()};\n *  }\n *  ```\n * @public\n */\nfunction printNoBackground() {\n    return {\n        background: 'none !important'\n    };\n}\n\n/**\n * Ensure that all text wraps so that it doesn't overflow the page.\n *\n *  ##### Example (@splunk/css-loader)\n *  ```css\n *  ‍@media print {\n *      .interactiveElement {\n *          ‍@mixin print-wrap-all;\n *      }\n *  }\n *  ```\n *\n *  ##### Example (styled-components)\n *  ```css\n *  ‍@media print {\n *      ‍${props => props.theme.mixins.printWrapAll()};\n *  }\n *  ```\n * @public\n */\nfunction printWrapAll() {\n    return {\n        wordBreak: 'break-all !important',\n        wordWrap: 'break-word !important',\n        overflowWrap: 'break-word !important',\n        whiteSpace: 'normal !important'\n    };\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vL1VzZXJzL2tjaGFtcGxpbi9wcm9ncmFtbWluZy9TUExVTktfVUkvQ29kZS9NeVRvRG9MaXN0L25vZGVfbW9kdWxlcy9Ac3BsdW5rL3RoZW1lcy9taXhpbnMuanM/NmFlYSJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQWdCOztBQUVoQjtBQUNBO0FBQ0EsQ0FBQzs7QUFFRCxtREFBbUQsZ0JBQWdCLHNCQUFzQixPQUFPLDJCQUEyQiwwQkFBMEIseURBQXlELDJCQUEyQixFQUFFLEVBQUUsRUFBRSxlQUFlOztBQUU5UDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxzQ0FBc0MsNEJBQTRCO0FBQ2xFO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZUFBZTtBQUNmO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZUFBZSxPQUFPO0FBQ3RCLGVBQWUsS0FBSztBQUNwQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsMEJBQTBCLHVCQUF1QjtBQUNqRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxXQUFXO0FBQ1g7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFdBQVc7QUFDWDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsV0FBVztBQUNYO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsV0FBVztBQUNYO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxXQUFXO0FBQ1g7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFdBQVc7QUFDWDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJmaWxlIjoiNS5qcyIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuKiBDb3B5cmlnaHQgwqkgMjAxOCBTcGx1bmsgSW5jLlxuKiBTUExVTksgQ09ORklERU5USUFMIOKAkyBVc2Ugb3IgZGlzY2xvc3VyZSBvZiB0aGlzIG1hdGVyaWFsIGluIHdob2xlIG9yIGluIHBhcnRcbiogd2l0aG91dCBhIHZhbGlkIHdyaXR0ZW4gbGljZW5zZSBmcm9tIFNwbHVuayBJbmMuIGlzIFBST0hJQklURUQuXG4qKi8ndXNlIHN0cmljdCc7XG5cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwge1xuICAgIHZhbHVlOiB0cnVlXG59KTtcblxudmFyIF9leHRlbmRzID0gT2JqZWN0LmFzc2lnbiB8fCBmdW5jdGlvbiAodGFyZ2V0KSB7IGZvciAodmFyIGkgPSAxOyBpIDwgYXJndW1lbnRzLmxlbmd0aDsgaSsrKSB7IHZhciBzb3VyY2UgPSBhcmd1bWVudHNbaV07IGZvciAodmFyIGtleSBpbiBzb3VyY2UpIHsgaWYgKE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChzb3VyY2UsIGtleSkpIHsgdGFyZ2V0W2tleV0gPSBzb3VyY2Vba2V5XTsgfSB9IH0gcmV0dXJuIHRhcmdldDsgfTtcblxuZXhwb3J0cy5jcmVhdGVSZXNldCA9IGNyZWF0ZVJlc2V0O1xuZXhwb3J0cy5jbGVhcmZpeCA9IGNsZWFyZml4O1xuZXhwb3J0cy5lbGxpcHNpcyA9IGVsbGlwc2lzO1xuZXhwb3J0cy5wcmludFdpZHRoMTAwUGVyY2VudCA9IHByaW50V2lkdGgxMDBQZXJjZW50O1xuZXhwb3J0cy5wcmludEhpZGUgPSBwcmludEhpZGU7XG5leHBvcnRzLnByaW50Tm9CYWNrZ3JvdW5kID0gcHJpbnROb0JhY2tncm91bmQ7XG5leHBvcnRzLnByaW50V3JhcEFsbCA9IHByaW50V3JhcEFsbDtcblxuLyoqXG4gKiBAZmlsZVxuICogQSBjb2xsZWN0aW9uIG9mIHN0eWxlLXJlbGF0ZWQgaGVscGVyIGZ1bmN0aW9ucy4gQWxsIG9mIHRoZW0gcmV0dXJuIGEgc2luZ2xlIG9iamVjdCBjb250YWluaW5nXG4gKiBET00gQ1NTIHByb3BlcnRpZXMsIGZvciBleGFtcGxlOiBgeyBkaXNwbGF5OiDigKYsIGZvbnRGYW1pbHk6IOKApiB9YC5cbiAqXG4gKiBgQHNwbHVuay9jc3MtbG9hZGVyYCBhdXRvbWF0aWNhbGx5IG1ha2VzIHRoZXNlIG1peGlucyBhdmFpbGFibGUgZm9yIHVzZSBidXQgY29udmVydHMgdGhlaXIgbmFtZVxuICogdG8ga2ViYWItY2FzZSAodG8gYWNoaXZlIGJhY2t3YXJkcyBjb21wYXRhYmlsaXR5KS4gRm9yIGV4YW1wbGU6IGBwcmludEhpZGVgIGNhbiBiZSB1c2VkIGFzIGBwcmludC1oaWRlYC5cbiAqL1xuXG4vLyBNYXJrZG93biBleGFtcGxlcyBpbiB0aGlzIGZpbGUgaGF2ZSB0byBwcmVwZW5kIGEgemVybyB3aWR0aCBqb2luZXIgY2hhcmFjdGVyIGJlZm9yZSBlYWNoIEBcbi8vIHRvIHByZXZlbnQganNkb2MgZnJvbSBpbnRlcnByZXRpbmcgc29tZXRoaW5nIGxpa2UgQG1peGluIGFzIGEgdGFnLCBzZWU6XG4vLyBodHRwczovL2dpdGh1Yi5jb20vanNkb2MzL2pzZG9jL2lzc3Vlcy84MjFcblxuZnVuY3Rpb24gY3JlYXRlUmVzZXQodmFyaWFibGVzKSB7XG4gICAgdmFyIGZ1bGxSZXNldCA9IHtcbiAgICAgICAgYW5pbWF0aW9uOiAnbm9uZSAwcyBlYXNlIDBzIDEgbm9ybWFsIG5vbmUgcnVubmluZycsXG4gICAgICAgIGJhY2tmYWNlVmlzaWJpbGl0eTogJ3Zpc2libGUnLFxuICAgICAgICBiYWNrZ3JvdW5kOiAndHJhbnNwYXJlbnQgbm9uZSByZXBlYXQgMCAwIC8gYXV0byBhdXRvIHBhZGRpbmctYm94IGJvcmRlci1ib3ggc2Nyb2xsJyxcbiAgICAgICAgYm9yZGVyOiAnbWVkaXVtIG5vbmUgY3VycmVudENvbG9yJyxcbiAgICAgICAgYm9yZGVyQ29sbGFwc2U6ICdzZXBhcmF0ZScsXG4gICAgICAgIGJvcmRlckltYWdlOiAnbm9uZScsXG4gICAgICAgIGJvcmRlclJhZGl1czogMCxcbiAgICAgICAgYm9yZGVyU3BhY2luZzogMCxcbiAgICAgICAgYm90dG9tOiAnYXV0bycsXG4gICAgICAgIGJveFNoYWRvdzogJ25vbmUnLFxuICAgICAgICBjYXB0aW9uU2lkZTogJ3RvcCcsXG4gICAgICAgIGNsZWFyOiAnbm9uZScsXG4gICAgICAgIGNsaXA6ICdhdXRvJyxcbiAgICAgICAgY29sdW1uczogJ2F1dG8nLFxuICAgICAgICBjb2x1bW5Db3VudDogJ2F1dG8nLFxuICAgICAgICBjb2x1bW5GaWxsOiAnYmFsYW5jZScsXG4gICAgICAgIGNvbHVtbkdhcDogJ25vcm1hbCcsXG4gICAgICAgIGNvbHVtblJ1bGU6ICdtZWRpdW0gbm9uZSBjdXJyZW50Q29sb3InLFxuICAgICAgICBjb2x1bW5TcGFuOiAxLFxuICAgICAgICBjb2x1bW5XaWR0aDogJ2F1dG8nLFxuICAgICAgICBjb250ZW50OiAnbm9ybWFsJyxcbiAgICAgICAgY291bnRlckluY3JlbWVudDogJ25vbmUnLFxuICAgICAgICBjb3VudGVyUmVzZXQ6ICdub25lJyxcbiAgICAgICAgY3Vyc29yOiAnYXV0bycsXG4gICAgICAgIGVtcHR5Q2VsbHM6ICdzaG93JyxcbiAgICAgICAgZmxvYXQ6ICdub25lJyxcbiAgICAgICAgZm9udFN0eWxlOiAnbm9ybWFsJyxcbiAgICAgICAgZm9udFZhcmlhbnQ6ICdub3JtYWwnLFxuICAgICAgICBmb250V2VpZ2h0OiAnbm9ybWFsJyxcbiAgICAgICAgZm9udFN0cmV0Y2g6ICdub3JtYWwnLFxuICAgICAgICBoZWlnaHQ6ICdhdXRvJyxcbiAgICAgICAgaHlwaGVuczogJ25vbmUnLFxuICAgICAgICBsZWZ0OiAnYXV0bycsXG4gICAgICAgIGxldHRlclNwYWNpbmc6ICdub3JtYWwnLFxuICAgICAgICBsaXN0U3R5bGU6ICdkaXNjIG91dHNpZGUgbm9uZScsXG4gICAgICAgIG1hcmdpbjogMCxcbiAgICAgICAgbWF4SGVpZ2h0OiAnbm9uZScsXG4gICAgICAgIG1heFdpZHRoOiAnbm9uZScsXG4gICAgICAgIG1pbkhlaWdodDogMCxcbiAgICAgICAgbWluV2lkdGg6IDAsXG4gICAgICAgIG9wYWNpdHk6IDEsXG4gICAgICAgIG9ycGhhbnM6IDIsXG4gICAgICAgIG92ZXJmbG93OiAndmlzaWJsZScsXG4gICAgICAgIG92ZXJmbG93WDogJ3Zpc2libGUnLFxuICAgICAgICBvdmVyZmxvd1k6ICd2aXNpYmxlJyxcbiAgICAgICAgcGFkZGluZzogMCxcbiAgICAgICAgcGFnZUJyZWFrQWZ0ZXI6ICdhdXRvJyxcbiAgICAgICAgcGFnZUJyZWFrQmVmb3JlOiAnYXV0bycsXG4gICAgICAgIHBhZ2VCcmVha0luc2lkZTogJ2F1dG8nLFxuICAgICAgICBwZXJzcGVjdGl2ZTogJ25vbmUnLFxuICAgICAgICBwZXJzcGVjdGl2ZU9yaWdpbjogJzUwJSA1MCUnLFxuICAgICAgICBwb2ludGVyRXZlbnRzOiAnYXV0bycsXG4gICAgICAgIHBvc2l0aW9uOiAnc3RhdGljJyxcbiAgICAgICAgcmlnaHQ6ICdhdXRvJyxcbiAgICAgICAgdGFiU2l6ZTogOCxcbiAgICAgICAgdGFibGVMYXlvdXQ6ICdhdXRvJyxcbiAgICAgICAgdGV4dEFsaWduOiAnbGVmdCcsXG4gICAgICAgIHRleHRBbGlnbkxhc3Q6ICdhdXRvJyxcbiAgICAgICAgdGV4dERlY29yYXRpb246ICdub25lJyxcbiAgICAgICAgdGV4dEluZGVudDogMCxcbiAgICAgICAgdGV4dFNoYWRvdzogJ25vbmUnLFxuICAgICAgICB0ZXh0VHJhbnNmb3JtOiAnbm9uZScsXG4gICAgICAgIHRvcDogJ2F1dG8nLFxuICAgICAgICB0cmFuc2Zvcm06ICdub25lJyxcbiAgICAgICAgdHJhbnNmb3JtT3JpZ2luOiAnNTAlIDUwJSAwJyxcbiAgICAgICAgdHJhbnNmb3JtU3R5bGU6ICdmbGF0JyxcbiAgICAgICAgdHJhbnNpdGlvbjogJ25vbmUgMHMgZWFzZSAwcycsXG4gICAgICAgIHVzZXJTZWxlY3Q6ICdhdXRvJyxcbiAgICAgICAgdmVydGljYWxBbGlnbjogJ2Jhc2VsaW5lJyxcbiAgICAgICAgd2hpdGVTcGFjZTogJ25vcm1hbCcsXG4gICAgICAgIHdpZG93czogMixcbiAgICAgICAgd2lkdGg6ICdhdXRvJyxcbiAgICAgICAgd29yZFNwYWNpbmc6ICdub3JtYWwnLFxuICAgICAgICB6SW5kZXg6ICdhdXRvJ1xuICAgIH07XG5cbiAgICAvKipcbiAgICAgKiBUaGUgYHJlc2V0YCBtaXhpbiByZXNldHMgYWxsIGNzcyBwcm9wZXJ0aWVzIHRvIHRoZWlyIGJyb3dzZXIgZGVmYXVsdHMsIHBsdXMgbWFueSB0b1xuICAgICAqIHRoZW1lLXNwZWNpZmljIHZhbHVlcy4gVGhpcyBlbnN1cmVzIGFuIGVsZW1lbnQgaXMgbm90IGluaGVyaXRpbmcgYW55IGluYXBwcm9wcmlhdGUgc3R5bGVzLlxuICAgICAqXG4gICAgICogTm90ZSB0aGF0IHRoZSBvdXRwdXQgaW5jbHVkZXMgYGFsbGAgc2V0IHRvIGBpbml0aWFsYC5cbiAgICAgKlxuICAgICAqICAjIyMjIyBFeGFtcGxlIChAc3BsdW5rL2Nzcy1sb2FkZXIpXG4gICAgICogIGBgYGNzc1xuICAgICAqICAubXlCdXR0b24ge1xuICAgICAqICAgICAg4oCNQG1peGluIHJlc2V0IGlubGluZS1ibG9jaztcbiAgICAgKiAgfVxuICAgICAqICBgYGBcbiAgICAgKlxuICAgICAqICAjIyMjIyBFeGFtcGxlIChzdHlsZWQtY29tcG9uZW50cylcbiAgICAgKiAgYGBgY3NzXG4gICAgICogIC5teUJ1dHRvbiB7XG4gICAgICogICAgICDigI0ke3Byb3BzID0+IHByb3BzLnRoZW1lLm1peGlucy5yZXNldCgnaW5saW5lLWJsb2NrJyl9O1xuICAgICAqICB9XG4gICAgICogIGBgYFxuICAgICAqIEBuYW1lIHJlc2V0XG4gICAgICogQGtpbmQgZnVuY3Rpb25cbiAgICAgKiBAcGFyYW0ge3N0cmluZ30gW2Rpc3BsYXk9aW5saW5lXSBTZXQgdGhlIGBkaXNwbGF5YCBwcm9wZXJ0eSAoYmxvY2ssIGlubGluZS1ibG9jaywg4oCmKVxuICAgICAqIEBwYXJhbSB7Ym9vbH0gW2Z1bGw9dHJ1ZV0gUmVzZXQgYWxsIHByb3BlcmllcyAoZm9yIGJyb3dzZXJzIHRoYXQgZG9uJ3Qgc3VwcG9ydCBgYWxsYDogYGluaXRpYWxgKVxuICAgICAqIEBwdWJsaWNcbiAgICAgKi9cbiAgICByZXR1cm4gZnVuY3Rpb24gKCkge1xuICAgICAgICB2YXIgZGlzcGxheSA9IGFyZ3VtZW50cy5sZW5ndGggPiAwICYmIGFyZ3VtZW50c1swXSAhPT0gdW5kZWZpbmVkID8gYXJndW1lbnRzWzBdIDogJ2lubGluZSc7XG4gICAgICAgIHZhciBmdWxsID0gYXJndW1lbnRzLmxlbmd0aCA+IDEgJiYgYXJndW1lbnRzWzFdICE9PSB1bmRlZmluZWQgPyBhcmd1bWVudHNbMV0gOiB0cnVlO1xuICAgICAgICByZXR1cm4gX2V4dGVuZHMoe30sIGZ1bGwgPyBmdWxsUmVzZXQgOiB7fSwge1xuICAgICAgICAgICAgYWxsOiAnaW5pdGlhbCcsXG4gICAgICAgICAgICBmb250RmFtaWx5OiB2YXJpYWJsZXMuZm9udEZhbWlseSxcbiAgICAgICAgICAgIGZvbnRTaXplOiB2YXJpYWJsZXMuZm9udFNpemUsXG4gICAgICAgICAgICBsaW5lSGVpZ2h0OiB2YXJpYWJsZXMubGluZUhlaWdodCxcbiAgICAgICAgICAgIGNvbG9yOiB2YXJpYWJsZXMudGV4dENvbG9yLFxuICAgICAgICAgICAgYm94U2l6aW5nOiAnYm9yZGVyLWJveCcsXG4gICAgICAgICAgICBkaXNwbGF5OiBkaXNwbGF5LFxuICAgICAgICAgICAgYm9yZGVyV2lkdGg6ICcxcHgnLFxuICAgICAgICAgICAgdmlzaWJpbGl0eTogJ2luaGVyaXQnLFxuICAgICAgICAgICAgb3V0bGluZTogJ21lZGl1bSBub25lICcgKyB2YXJpYWJsZXMuZm9jdXNDb2xvclxuICAgICAgICB9KTtcbiAgICB9O1xufVxuXG4vKipcbiAqIGBjbGVhcmZpeGAgaXMgdXNlZCBvbiBhIGNvbnRhaW5lciB0byBlbnN1cmUgaXQncyBoZWlnaHQgaXMgYXQgbGVhc3QgYXMgdGFsbCBhcyBhbnkgZmxvYXRpbmdcbiAqIGNoaWxkcmVuLlxuICpcbiAqICAjIyMjIyBFeGFtcGxlIChAc3BsdW5rL2Nzcy1sb2FkZXIpXG4gKiAgYGBgIGNzc1xuICogIC5jb250YWluZXIge1xuICogICAgICDigI1AbWl4aW4gY2xlYXJmaXg7XG4gKiAgfVxuICogIGBgYFxuICpcbiAqICAjIyMjIyBFeGFtcGxlIChzdHlsZWQtY29tcG9uZW50cylcbiAqICBgYGAgY3NzXG4gKiAgLm15QnV0dG9uIHtcbiAqICAgICAg4oCNJHtwcm9wcyA9PiBwcm9wcy50aGVtZS5taXhpbnMuY2xlYXJmaXgoKX07XG4gKiAgIH1cbiAqICBgYGBcbiAqIEBwdWJsaWNcbiAqL1xuZnVuY3Rpb24gY2xlYXJmaXgoKSB7XG4gICAgcmV0dXJuIHtcbiAgICAgICAgJyY6OmFmdGVyJzoge1xuICAgICAgICAgICAgZGlzcGxheTogJ3RhYmxlJyxcbiAgICAgICAgICAgIGNvbnRlbnQ6ICdcIlwiJyxcbiAgICAgICAgICAgIGNsZWFyOiAnYm90aCdcbiAgICAgICAgfVxuICAgIH07XG59XG5cbi8qKlxuICogVXNlIGBlbGxpcHNpc2AgZm9yIG92ZXJmbG93aW5nIHRleHQuIFJlcXVpcmVzIGBkaXNwbGF5YCB0byBiZSBzZXQgdG8gYGlubGluZS1ibG9ja2Agb3IgYGJsb2NrYC5cbiAqXG4gKiAgIyMjIyMgRXhhbXBsZSAoQHNwbHVuay9jc3MtbG9hZGVyKVxuICogIGBgYCBjc3NcbiAqICAubXlCdXR0b24ge1xuICogICAgICDigI1AbWl4aW4gZWxsaXBzaXM7XG4gKiAgICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAqICB9XG4gKiAgYGBgXG4gKlxuICogICMjIyMjIEV4YW1wbGUgKHN0eWxlZC1jb21wb25lbnRzKVxuICogIGBgYCBjc3NcbiAqICAubXlCdXR0b24ge1xuICogICAgICDigI0ke3Byb3BzID0+IHByb3BzLnRoZW1lLm1peGlucy5lbGxpcHNpcygpfTtcbiAqICAgICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICogICB9XG4gKiAgYGBgXG4gKiBAcHVibGljXG4gKi9cbmZ1bmN0aW9uIGVsbGlwc2lzKCkge1xuICAgIHJldHVybiB7XG4gICAgICAgIG92ZXJmbG93OiAnaGlkZGVuJyxcbiAgICAgICAgdGV4dE92ZXJmbG93OiAnZWxsaXBzaXMnLFxuICAgICAgICB3aGl0ZVNwYWNlOiAnbm93cmFwJ1xuICAgIH07XG59XG5cbi8qKlxuICogRm9yY2UgYW4gZWxlbWVudCB0byBiZSBleGFjdGx5IDEwMCUgd2lkZSBzbyB0aGF0IGl0IGRvZXNuJ3Qgb3ZlcmZsb3cgdGhlIHBhZ2UuXG4gKlxuICogICMjIyMjIEV4YW1wbGUgKEBzcGx1bmsvY3NzLWxvYWRlcilcbiAqICBgYGBjc3NcbiAqICDigI1AbWVkaWEgcHJpbnQge1xuICogICAgICAuY29udGFpbmVyIHtcbiAqICAgICAgICAgIOKAjUBtaXhpbiBwcmludC13aWR0aC0xMDAtcGVyY2VudDtcbiAqICAgICAgfVxuICogIH1cbiAqICBgYGBcbiAqXG4gKiAgIyMjIyMgRXhhbXBsZSAoc3R5bGVkLWNvbXBvbmVudHMpXG4gKiAgYGBgY3NzXG4gKiAg4oCNQG1lZGlhIHByaW50IHtcbiAqICAgICAg4oCNJHtwcm9wcyA9PiBwcm9wcy50aGVtZS5taXhpbnMucHJpbnRXaWR0aDEwMFBlcmNlbnQoKX07XG4gKiAgfVxuICogIGBgYFxuICogIEBwdWJsaWNcbiAqL1xuZnVuY3Rpb24gcHJpbnRXaWR0aDEwMFBlcmNlbnQoKSB7XG4gICAgcmV0dXJuIHtcbiAgICAgICAgbWF4V2lkdGg6ICcxMDAlICFpbXBvcnRhbnQnLFxuICAgICAgICB3aWR0aDogJzEwMCUgIWltcG9ydGFudCcsXG4gICAgICAgIG92ZXJmbG93OiAnaGlkZGVuICFpbXBvcnRhbnQnXG4gICAgfTtcbn1cblxuLyoqXG4gKiBIaWRlIGFuIGVsZW1lbnQgKHN1Y2ggYXMgYSBidXR0b24pLlxuICpcbiAqICAjIyMjIyBFeGFtcGxlIChAc3BsdW5rL2Nzcy1sb2FkZXIpXG4gKiAgYGBgY3NzXG4gKiAg4oCNQG1lZGlhIHByaW50IHtcbiAqICAgICAgLmludGVyYWN0aXZlRWxlbWVudCB7XG4gKiAgICAgICAgICDigI1AbWl4aW4gcHJpbnQtaGlkZTtcbiAqICAgICAgfVxuICogIH1cbiAqICBgYGBcbiAqXG4gKiAgIyMjIyMgRXhhbXBsZSAoc3R5bGVkLWNvbXBvbmVudHMpXG4gKiAgYGBgY3NzXG4gKiAg4oCNQG1lZGlhIHByaW50IHtcbiAqICAgICAg4oCNJHtwcm9wcyA9PiBwcm9wcy50aGVtZS5taXhpbnMucHJpbnRIaWRlKCl9O1xuICogIH1cbiAqICBgYGBcbiAqIEBwdWJsaWNcbiAqL1xuZnVuY3Rpb24gcHJpbnRIaWRlKCkge1xuICAgIHJldHVybiB7XG4gICAgICAgIGRpc3BsYXk6ICdub25lICFpbXBvcnRhbnQnXG4gICAgfTtcbn1cblxuLyoqXG4gKiBSZW1vdmUgYmFja2dyb3VuZCBncmFkaWVudHMgYW5kIGltYWdlcy5cbiAqXG4gKiAgIyMjIyMgRXhhbXBsZSAoQHNwbHVuay9jc3MtbG9hZGVyKVxuICogIGBgYGNzc1xuICogIOKAjUBtZWRpYSBwcmludCB7XG4gKiAgICAgIC5pbnRlcmFjdGl2ZUVsZW1lbnQge1xuICogICAgICAgICAg4oCNQG1peGluIHByaW50LW5vLWJhY2tncm91bmQ7XG4gKiAgICAgIH1cbiAqICB9XG4gKiAgYGBgXG4gKlxuICogICMjIyMjIEV4YW1wbGUgKHN0eWxlZC1jb21wb25lbnRzKVxuICogIGBgYGNzc1xuICogIOKAjUBtZWRpYSBwcmludCB7XG4gKiAgICAgIOKAjSR7cHJvcHMgPT4gcHJvcHMudGhlbWUubWl4aW5zLnByaW50Tm9CYWNrZ3JvdW5kKCl9O1xuICogIH1cbiAqICBgYGBcbiAqIEBwdWJsaWNcbiAqL1xuZnVuY3Rpb24gcHJpbnROb0JhY2tncm91bmQoKSB7XG4gICAgcmV0dXJuIHtcbiAgICAgICAgYmFja2dyb3VuZDogJ25vbmUgIWltcG9ydGFudCdcbiAgICB9O1xufVxuXG4vKipcbiAqIEVuc3VyZSB0aGF0IGFsbCB0ZXh0IHdyYXBzIHNvIHRoYXQgaXQgZG9lc24ndCBvdmVyZmxvdyB0aGUgcGFnZS5cbiAqXG4gKiAgIyMjIyMgRXhhbXBsZSAoQHNwbHVuay9jc3MtbG9hZGVyKVxuICogIGBgYGNzc1xuICogIOKAjUBtZWRpYSBwcmludCB7XG4gKiAgICAgIC5pbnRlcmFjdGl2ZUVsZW1lbnQge1xuICogICAgICAgICAg4oCNQG1peGluIHByaW50LXdyYXAtYWxsO1xuICogICAgICB9XG4gKiAgfVxuICogIGBgYFxuICpcbiAqICAjIyMjIyBFeGFtcGxlIChzdHlsZWQtY29tcG9uZW50cylcbiAqICBgYGBjc3NcbiAqICDigI1AbWVkaWEgcHJpbnQge1xuICogICAgICDigI0ke3Byb3BzID0+IHByb3BzLnRoZW1lLm1peGlucy5wcmludFdyYXBBbGwoKX07XG4gKiAgfVxuICogIGBgYFxuICogQHB1YmxpY1xuICovXG5mdW5jdGlvbiBwcmludFdyYXBBbGwoKSB7XG4gICAgcmV0dXJuIHtcbiAgICAgICAgd29yZEJyZWFrOiAnYnJlYWstYWxsICFpbXBvcnRhbnQnLFxuICAgICAgICB3b3JkV3JhcDogJ2JyZWFrLXdvcmQgIWltcG9ydGFudCcsXG4gICAgICAgIG92ZXJmbG93V3JhcDogJ2JyZWFrLXdvcmQgIWltcG9ydGFudCcsXG4gICAgICAgIHdoaXRlU3BhY2U6ICdub3JtYWwgIWltcG9ydGFudCdcbiAgICB9O1xufSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///5\n")},7:function(module,exports,__webpack_require__){"use strict";eval("/**\n* Copyright © 2018 Splunk Inc.\n* SPLUNK CONFIDENTIAL – Use or disclosure of this material in whole or in part\n* without a valid written license from Splunk Inc. is PROHIBITED.\n**/\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _base = __webpack_require__(9);\n\nvar _base2 = _interopRequireDefault(_base);\n\nvar _mixins = __webpack_require__(5);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * # Brand Colors\n *\n *  @colorSet\n */\nvar brandColors = {\n    brandColorL50: '#f5fbf5',\n    brandColorL40: '#dff2df',\n    brandColorL30: '#bee6be',\n    brandColorL20: '#9ed99e',\n    brandColorL10: '#7ecd7e',\n    brandColor: '#5cc05c',\n    brandColorD10: '#49b849',\n    brandColorD20: '#40a540',\n    brandColorD30: '#389038',\n    brandColorD40: '#307b30',\n    brandColorD50: '#286728'\n};\n\nvar variables = _extends({}, _base2.default, brandColors);\n\nexports.default = _extends({}, variables, {\n    mixins: {\n        reset: (0, _mixins.createReset)(variables),\n        clearfix: _mixins.clearfix,\n        ellipsis: _mixins.ellipsis,\n        printWidth100Percent: _mixins.printWidth100Percent,\n        printHide: _mixins.printHide,\n        printNoBackground: _mixins.printNoBackground,\n        printWrapAll: _mixins.printWrapAll\n    }\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vL1VzZXJzL2tjaGFtcGxpbi9wcm9ncmFtbWluZy9TUExVTktfVUkvQ29kZS9NeVRvRG9MaXN0L25vZGVfbW9kdWxlcy9Ac3BsdW5rL3RoZW1lcy9lbnRlcnByaXNlLmpzPzEwY2YiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFnQjs7QUFFaEI7QUFDQTtBQUNBLENBQUM7O0FBRUQsbURBQW1ELGdCQUFnQixzQkFBc0IsT0FBTywyQkFBMkIsMEJBQTBCLHlEQUF5RCwyQkFBMkIsRUFBRSxFQUFFLEVBQUUsZUFBZTs7QUFFOVAsWUFBWSxtQkFBTyxDQUFDLENBQVE7O0FBRTVCOztBQUVBLGNBQWMsbUJBQU8sQ0FBQyxDQUFVOztBQUVoQyxzQ0FBc0MsdUNBQXVDLGdCQUFnQjs7QUFFN0Y7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBLDJCQUEyQjs7QUFFM0IsNkJBQTZCO0FBQzdCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUMiLCJmaWxlIjoiNy5qcyIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuKiBDb3B5cmlnaHQgwqkgMjAxOCBTcGx1bmsgSW5jLlxuKiBTUExVTksgQ09ORklERU5USUFMIOKAkyBVc2Ugb3IgZGlzY2xvc3VyZSBvZiB0aGlzIG1hdGVyaWFsIGluIHdob2xlIG9yIGluIHBhcnRcbiogd2l0aG91dCBhIHZhbGlkIHdyaXR0ZW4gbGljZW5zZSBmcm9tIFNwbHVuayBJbmMuIGlzIFBST0hJQklURUQuXG4qKi8ndXNlIHN0cmljdCc7XG5cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwge1xuICAgIHZhbHVlOiB0cnVlXG59KTtcblxudmFyIF9leHRlbmRzID0gT2JqZWN0LmFzc2lnbiB8fCBmdW5jdGlvbiAodGFyZ2V0KSB7IGZvciAodmFyIGkgPSAxOyBpIDwgYXJndW1lbnRzLmxlbmd0aDsgaSsrKSB7IHZhciBzb3VyY2UgPSBhcmd1bWVudHNbaV07IGZvciAodmFyIGtleSBpbiBzb3VyY2UpIHsgaWYgKE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChzb3VyY2UsIGtleSkpIHsgdGFyZ2V0W2tleV0gPSBzb3VyY2Vba2V5XTsgfSB9IH0gcmV0dXJuIHRhcmdldDsgfTtcblxudmFyIF9iYXNlID0gcmVxdWlyZSgnLi9iYXNlJyk7XG5cbnZhciBfYmFzZTIgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KF9iYXNlKTtcblxudmFyIF9taXhpbnMgPSByZXF1aXJlKCcuL21peGlucycpO1xuXG5mdW5jdGlvbiBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KG9iaikgeyByZXR1cm4gb2JqICYmIG9iai5fX2VzTW9kdWxlID8gb2JqIDogeyBkZWZhdWx0OiBvYmogfTsgfVxuXG4vKipcbiAqICMgQnJhbmQgQ29sb3JzXG4gKlxuICogIEBjb2xvclNldFxuICovXG52YXIgYnJhbmRDb2xvcnMgPSB7XG4gICAgYnJhbmRDb2xvckw1MDogJyNmNWZiZjUnLFxuICAgIGJyYW5kQ29sb3JMNDA6ICcjZGZmMmRmJyxcbiAgICBicmFuZENvbG9yTDMwOiAnI2JlZTZiZScsXG4gICAgYnJhbmRDb2xvckwyMDogJyM5ZWQ5OWUnLFxuICAgIGJyYW5kQ29sb3JMMTA6ICcjN2VjZDdlJyxcbiAgICBicmFuZENvbG9yOiAnIzVjYzA1YycsXG4gICAgYnJhbmRDb2xvckQxMDogJyM0OWI4NDknLFxuICAgIGJyYW5kQ29sb3JEMjA6ICcjNDBhNTQwJyxcbiAgICBicmFuZENvbG9yRDMwOiAnIzM4OTAzOCcsXG4gICAgYnJhbmRDb2xvckQ0MDogJyMzMDdiMzAnLFxuICAgIGJyYW5kQ29sb3JENTA6ICcjMjg2NzI4J1xufTtcblxudmFyIHZhcmlhYmxlcyA9IF9leHRlbmRzKHt9LCBfYmFzZTIuZGVmYXVsdCwgYnJhbmRDb2xvcnMpO1xuXG5leHBvcnRzLmRlZmF1bHQgPSBfZXh0ZW5kcyh7fSwgdmFyaWFibGVzLCB7XG4gICAgbWl4aW5zOiB7XG4gICAgICAgIHJlc2V0OiAoMCwgX21peGlucy5jcmVhdGVSZXNldCkodmFyaWFibGVzKSxcbiAgICAgICAgY2xlYXJmaXg6IF9taXhpbnMuY2xlYXJmaXgsXG4gICAgICAgIGVsbGlwc2lzOiBfbWl4aW5zLmVsbGlwc2lzLFxuICAgICAgICBwcmludFdpZHRoMTAwUGVyY2VudDogX21peGlucy5wcmludFdpZHRoMTAwUGVyY2VudCxcbiAgICAgICAgcHJpbnRIaWRlOiBfbWl4aW5zLnByaW50SGlkZSxcbiAgICAgICAgcHJpbnROb0JhY2tncm91bmQ6IF9taXhpbnMucHJpbnROb0JhY2tncm91bmQsXG4gICAgICAgIHByaW50V3JhcEFsbDogX21peGlucy5wcmludFdyYXBBbGxcbiAgICB9XG59KTsiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///7\n")},9:function(module,exports,__webpack_require__){"use strict";eval("/**\n* Copyright © 2018 Splunk Inc.\n* SPLUNK CONFIDENTIAL – Use or disclosure of this material in whole or in part\n* without a valid written license from Splunk Inc. is PROHIBITED.\n**/\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _tinycolor = __webpack_require__(15);\n\nvar _tinycolor2 = _interopRequireDefault(_tinycolor);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar dragHandle = 'iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAAAG0lEQVR4AWMAgioUjAoIyg9xAxBgFIymg1EAAD/iHoHfZJ8OAAAAAElFTkSuQmCC'; // see babel-plugin-base64-png\n\n/**\n * # Grayscale Colors\n *\n * @colorSet\n */\n\nvar grays = {\n    white: '#ffffff',\n    gray98: '#f7f8fa',\n    gray96: '#f2f4f5',\n    gray92: '#e1e6eb',\n    gray80: '#c3cbd4',\n    gray60: '#818d99',\n    gray45: '#5c6773',\n    gray30: '#3c444d',\n    gray25: '#31373e',\n    gray22: '#2b3033',\n    gray20: '#171d21',\n    black: '#000000'\n};\n\n/**\n * # Accent Colors\n *\n * @colorSet\n */\nvar accentColors = {\n    accentColorL50: '#ecf8ff',\n    accentColorL40: '#bfe9ff',\n    accentColorL30: '#7ed2ff',\n    accentColorL20: '#3ebcff',\n    accentColorL10: '#00a4fd',\n    accentColor: '#007abd',\n    accentColorD10: '#006eaa',\n    accentColorD20: '#006297',\n    accentColorD30: '#005684',\n    accentColorD40: '#004a71',\n    accentColorD50: '#003d5e'\n};\n\n/**\n * # Error Colors\n *\n * @colorSet\n */\nvar errorColors = {\n    errorColorL50: '#fcedec',\n    errorColorL40: '#f8dcd9',\n    errorColorL30: '#f1b9b3',\n    errorColorL20: '#ea958d',\n    errorColorL10: '#e37267',\n    errorColor: '#dc4e41',\n    errorColorD10: '#c84535',\n    errorColorD20: '#b23d30',\n    errorColorD30: '#9c3529',\n    errorColorD40: '#852d24',\n    errorColorD50: '#6f261d'\n};\n\n/**\n * # Alert Colors\n *\n * @colorSet\n * */\nvar alertColors = {\n    alertColorL50: '#fef3ec',\n    alertColorL40: '#fde6d9',\n    alertColorL30: '#facdb3',\n    alertColorL20: '#f7b48c',\n    alertColorL10: '#f49b66',\n    alertColor: '#f1813f',\n    alertColorD10: '#da742e',\n    alertColorD20: '#c2672a',\n    alertColorD30: '#aa5a25',\n    alertColorD40: '#914d1f',\n    alertColorD50: '#79401a'\n};\n\n/**\n * # Warning Colors\n *\n *  @colorSet\n */\nvar warningColors = {\n    warningColorL50: '#fff9eb',\n    warningColorL40: '#fef2d7',\n    warningColorL30: '#fde5ae',\n    warningColorL20: '#fbd886',\n    warningColorL10: '#facb5d',\n    warningColor: '#f8be34',\n    warningColorD10: '#e0ac16',\n    warningColorD20: '#c79915',\n    warningColorD30: '#ae8613',\n    warningColorD40: '#957312',\n    warningColorD50: '#7d600f'\n};\n\n/**\n * # Success Colors\n *\n * @colorSet\n */\nvar successColors = {\n    successColorL50: '#eef6ee',\n    successColorL40: '#ddecdd',\n    successColorL30: '#bbd9ba',\n    successColorL20: '#98c697',\n    successColorL10: '#76b374',\n    successColor: '#53a051',\n    successColorD10: '#479144',\n    successColorD20: '#40813d',\n    successColorD30: '#387135',\n    successColorD40: '#2f612e',\n    successColorD50: '#275126'\n};\n\n/**\n * # Info Colors\n *\n *  @colorSet\n */\nvar infoColors = {\n    infoColorL50: '#e5f0f5',\n    infoColorL40: '#cce2eb',\n    infoColorL30: '#99c5d7',\n    infoColorL20: '#66a7c4',\n    infoColorL10: '#338ab0',\n    infoColor: '#006d9c',\n    infoColorD10: '#00577c',\n    infoColorD20: '#004c6c',\n    infoColorD30: '#00415d',\n    infoColorD40: '#00364d',\n    infoColorD50: '#002b3e'\n};\n\n/**\n * # Diverging Colors\n *\n * @colorSet alphabetical\n */\nvar divergingColors = {\n    diverging1ColorA: '#006d9c',\n    diverging1ColorB: '#ec9960',\n\n    diverging2ColorA: '#af575a',\n    diverging2ColorB: '#62b3b2',\n\n    diverging3ColorA: '#4fa484',\n    diverging3ColorB: '#f8be34',\n\n    diverging4ColorA: '#5a4575',\n    diverging4ColorB: '#708794',\n\n    diverging5ColorA: '#294e70',\n    diverging5ColorB: '#b6c75a'\n};\n\n/**\n * # Categorical Colors\n *\n * @colorSet alphabetical\n */\nvar categoricalColors = {\n    cat1Color: '#297ba5',\n    cat1ColorL: '#78b9d6',\n\n    cat2Color: '#4fa484',\n    cat2ColorL: '#74d5c2',\n\n    cat3Color: '#b6c75a',\n    cat3ColorL: '#dce6a5',\n\n    cat4Color: '#3c6188',\n    cat4ColorL: '#a0b2ca',\n\n    cat5Color: '#ec9960',\n    cat5ColorL: '#fac9a7',\n\n    cat6Color: '#a65c7d',\n    cat6ColorL: '#d3a7ba',\n\n    cat7Color: '#708794',\n    cat7ColorL: '#b2c0c8',\n\n    cat8Color: '#38b8bf',\n    cat8ColorL: '#92dde2',\n\n    cat9Color: '#ffde63',\n    cat9ColorL: '#ffeeae',\n\n    cat10Color: '#c19975',\n    cat10ColorL: '#d7bfab',\n\n    cat11Color: '#5a4575',\n    cat11ColorL: '#b7acca',\n\n    cat12Color: '#7ea77b',\n    cat12ColorL: '#b2cab0',\n\n    cat13Color: '#576d83',\n    cat13ColorL: '#a5b2bf',\n\n    cat14Color: '#d7c6b7',\n    cat14ColorL: '#e9ddd4',\n\n    cat15Color: '#339bb2',\n    cat15ColorL: '#66c3d0',\n\n    cat16Color: '#236d9b',\n    cat16ColorL: '#66a7c2',\n\n    cat17Color: '#e5dc80',\n    cat17ColorL: '#f1eab7',\n\n    cat18Color: '#96907f',\n    cat18ColorL: '#c1bcb3',\n\n    cat19Color: '#87bc65',\n    cat19ColorL: '#b6d7a3',\n\n    cat20Color: '#cf7e60',\n    cat20ColorL: '#e1b2a1',\n\n    cat21Color: '#7b5547',\n    cat21ColorL: '#dec4ba',\n\n    cat22Color: '#77d6d8',\n    cat22ColorL: '#abe6e8',\n\n    cat23Color: '#4a7f2c',\n    cat23ColorL: '#91b282',\n\n    cat24Color: '#f589ad',\n    cat24ColorL: '#f8b7ce',\n\n    cat25Color: '#6a2c5d',\n    cat25ColorL: '#cba3c2',\n\n    cat26Color: '#aaabae',\n    cat26ColorL: '#cccdce',\n\n    cat27Color: '#9a7438',\n    cat27ColorL: '#c3ab89',\n\n    cat28Color: '#a4d563',\n    cat28ColorL: '#c7e6a3',\n\n    cat29Color: '#7672a4',\n    cat29ColorL: '#ada9c8',\n\n    cat30Color: '#184b81',\n    cat30ColorL: '#a4bbe0'\n};\n\n/**\n * # Usage-based Colors\n *\n * @colorSet verbose\n */\nvar usageColors = {\n    textColor: grays.gray30,\n    textGray: '#6b7785',\n    textDisabledColor: grays.gray80,\n    linkColor: accentColors.accentColorD10,\n    linkColorHover: accentColors.accentColor,\n    borderLightColor: grays.gray92,\n    borderColor: grays.gray80,\n    focusColor: accentColors.accentColorL10,\n    backgroundColorHover: grays.gray96,\n    backgroundColor: grays.white\n};\n\n/**\n * # Syntax Colors\n * The following colors should only be used for syntax coloring of code.\n *\n * @colorSet verbose alphabetical\n */\nvar syntaxColors = {\n    syntaxBlue: '#2662fc',\n    syntaxBlueLight: '#006d9c',\n    syntaxBrown: '#a67f59',\n    syntaxGray: '#8293a7',\n    syntaxGreen: '#5ca300',\n    syntaxGreenLight: '#5ba383',\n    syntaxOrange: '#f58220',\n    syntaxPink: '#cf00cf',\n    syntaxPurple: '#7738ff',\n    syntaxPurpleLight: '#b19cd9',\n    syntaxRed: '#d90700',\n    syntaxRedLight: '#af575a',\n    syntaxTeal: '#00a8ab'\n};\n\n/**\n * # Shadows\n *\n * @shadowSet\n */\nvar shadows = {\n    focusShadow: '0 0 1px 2px ' + (0, _tinycolor2.default)(usageColors.focusColor).setAlpha(0.6).toRgbString(),\n    focusShadowInset: 'inset 0 0 2px 1px ' + grays.white + ', inset 0 0 0 2px ' + usageColors.focusColor,\n    overlayShadow: '0 4px 8px rgba(0, 0, 0, 0.2)'\n};\n\n/**\n * # Backgrounds\n *\n * @colorSet verbose\n */\nvar backgrounds = {\n    draggableBackground: 'url(\\'data:image/png;base64,' + dragHandle + '\\') 0 0 / 8px 8px repeat'\n};\n\n/**\n * # Border\n *\n * @valueSet\n */\nvar border = {\n    borderRadius: '3px',\n    border: '1px solid ' + usageColors.borderColor\n};\n\n/**\n * # Measures\n * Spacing is used for margin on any element or padding on containers, but could be used for other\n * properties that position elements.\n * * Larger containers, such as `Card` or `Modal` use `spacing`.\n * * `spacingHalf` and `spacingQuarter` are primarily for horizontal spacing between smaller elements.\n * * Just because a desired value equals 20, 10 or 5 pixels, does not mean it's appropriate to\n * use spacing variables.\n *\n * @valueSet\n */\nvar measures = {\n    spacing: '20px',\n    spacingHalf: '10px',\n    spacingQuarter: '5px',\n    fontSize: '14px',\n    fontSizeXSmall: '11px',\n    fontSizeSmall: '12px',\n    fontSizeLarge: '16px',\n    fontSizeXLarge: '18px',\n    fontSizeXXLarge: '24px',\n    lineHeight: '20px',\n    inputHeight: '32px',\n    inputHeightSmall: '28px',\n    inputHeightLarge: '38px',\n    toastContainerWidth: '500px'\n};\n\nvar sansFontFamily = \"'Splunk Platform Sans', 'Proxima Nova', Roboto, Droid, 'Helvetica Neue', Helvetica, Arial, sans-serif\";\n/**\n * # Fonts\n *\n * @valueSet\n */\nvar fonts = {\n    sansFontFamily: sansFontFamily,\n    serifFontFamily: \"Georgia, 'Times New Roman', Times, serif\",\n    monoFontFamily: \"'Splunk Platform Mono', Inconsolata, Consolas, 'Droid Sans Mono', Monaco, 'Courier New', Courier, monospace\",\n    fontFamily: sansFontFamily,\n    fontWeightSemiBold: '500'\n};\n\n/**\n * # Layers\n * If a variable does not suit your purpose, set a value relatively such as, zindexModal +1\n *\n * @valueSet\n */\nvar zindexes = {\n    zindexFixedNavbar: 1030,\n    zindexModalBackdrop: 1040,\n    zindexModal: 1050,\n    zindexPopover: 1060,\n    zindexToastMessages: 2000\n};\n\nexports.default = _extends({}, grays, accentColors, errorColors, alertColors, warningColors, successColors, infoColors, categoricalColors, divergingColors, syntaxColors, measures, fonts, usageColors, backgrounds, shadows, border, zindexes);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///9\n")}});